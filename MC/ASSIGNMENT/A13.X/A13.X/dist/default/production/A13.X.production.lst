

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Mar 19 22:22:20 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18   000000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4580 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53   000000                     
    54                           	psect	idataCOMRAM
    55   0008F8                     __pidataCOMRAM:
    56                           	callstack 0
    57                           
    58                           ;initializer for _digits
    59   0008F8  E7                 	db	231
    60   0008F9  21                 	db	33
    61   0008FA  CB                 	db	203
    62   0008FB  6B                 	db	107
    63   0008FC  2D                 	db	45
    64   0008FD  6E                 	db	110
    65   0008FE  EE                 	db	238
    66   0008FF  23                 	db	35
    67   000900  EF                 	db	239
    68   000901  6F                 	db	111
    69   000000                     _PORTA	set	3968
    70   000000                     _RC0	set	31760
    71   000000                     _PORTD	set	3971
    72   000000                     _TRISA	set	3986
    73   000000                     _TRISD	set	3989
    74   000000                     _ADCON1	set	4033
    75                           
    76                           ; #config settings
    77                           
    78                           	psect	cinit
    79   0008BC                     __pcinit:
    80                           	callstack 0
    81   0008BC                     start_initialization:
    82                           	callstack 0
    83   0008BC                     __initialization:
    84                           	callstack 0
    85                           
    86                           ; Initialize objects allocated to COMRAM (10 bytes)
    87                           ; load TBLPTR registers with __pidataCOMRAM
    88   0008BC  0EF8               	movlw	low __pidataCOMRAM
    89   0008BE  6EF6               	movwf	tblptrl,c
    90   0008C0  0E08               	movlw	high __pidataCOMRAM
    91   0008C2  6EF7               	movwf	tblptrh,c
    92   0008C4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    93   0008C6  6EF8               	movwf	tblptru,c
    94   0008C8  EE00  F02E         	lfsr	0,__pdataCOMRAM
    95   0008CC  EE10 F00A          	lfsr	1,10
    96   0008D0                     copy_data0:
    97   0008D0  0009               	tblrd		*+
    98   0008D2  CFF5 FFEE          	movff	tablat,postinc0
    99   0008D6  50E5               	movf	postdec1,w,c
   100   0008D8  50E1               	movf	fsr1l,w,c
   101   0008DA  E1FA               	bnz	copy_data0
   102   0008DC                     end_of_initialization:
   103                           	callstack 0
   104   0008DC                     __end_of__initialization:
   105                           	callstack 0
   106   0008DC  0100               	movlb	0
   107   0008DE  EFF2  F003         	goto	_main	;jump to C main() function
   108                           
   109                           	psect	dataCOMRAM
   110   00002E                     __pdataCOMRAM:
   111                           	callstack 0
   112   00002E                     _digits:
   113                           	callstack 0
   114   00002E                     	ds	10
   115                           
   116                           	psect	cstackCOMRAM
   117   000001                     __pcstackCOMRAM:
   118                           	callstack 0
   119   000001                     display@data:
   120                           	callstack 0
   121                           
   122                           ; 1 bytes @ 0x0
   123   000001                     	ds	1
   124   000002                     display@count:
   125                           	callstack 0
   126                           
   127                           ; 2 bytes @ 0x1
   128   000002                     	ds	2
   129   000004                     display@wait:
   130                           	callstack 0
   131                           
   132                           ; 4 bytes @ 0x3
   133   000004                     	ds	4
   134   000008                     display@wait_62:
   135                           	callstack 0
   136                           
   137                           ; 4 bytes @ 0x7
   138   000008                     	ds	4
   139   00000C                     display@wait_63:
   140                           	callstack 0
   141                           
   142                           ; 4 bytes @ 0xB
   143   00000C                     	ds	4
   144   000010                     display@wait_64:
   145                           	callstack 0
   146                           
   147                           ; 4 bytes @ 0xF
   148   000010                     	ds	4
   149   000014                     display@c:
   150                           	callstack 0
   151                           
   152                           ; 2 bytes @ 0x13
   153   000014                     	ds	2
   154   000016                     display@i:
   155                           	callstack 0
   156                           
   157                           ; 2 bytes @ 0x15
   158   000016                     	ds	2
   159   000018                     display@i1:
   160                           	callstack 0
   161                           
   162                           ; 2 bytes @ 0x17
   163   000018                     	ds	2
   164   00001A                     display@i2:
   165                           	callstack 0
   166                           
   167                           ; 2 bytes @ 0x19
   168   00001A                     	ds	2
   169   00001C                     display@i3:
   170                           	callstack 0
   171                           
   172                           ; 2 bytes @ 0x1B
   173   00001C                     	ds	2
   174   00001E                     ??_main:
   175                           
   176                           ; 1 bytes @ 0x1D
   177   00001E                     	ds	2
   178   000020                     main@ssd:
   179                           	callstack 0
   180                           
   181                           ; 10 bytes @ 0x1F
   182   000020                     	ds	10
   183   00002A                     main@count:
   184                           	callstack 0
   185                           
   186                           ; 2 bytes @ 0x29
   187   00002A                     	ds	2
   188   00002C                     main@delay:
   189                           	callstack 0
   190                           
   191                           ; 2 bytes @ 0x2B
   192   00002C                     	ds	2
   193                           
   194 ;;
   195 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   196 ;;
   197 ;; *************** function _main *****************
   198 ;; Defined at:
   199 ;;		line 18 in file "A13-main.c"
   200 ;; Parameters:    Size  Location     Type
   201 ;;		None
   202 ;; Auto vars:     Size  Location     Type
   203 ;;  ssd            10   31[COMRAM] unsigned char [10]
   204 ;;  delay           2   43[COMRAM] int 
   205 ;;  count           2   41[COMRAM] int 
   206 ;; Return value:  Size  Location     Type
   207 ;;                  1    wreg      void 
   208 ;; Registers used:
   209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   210 ;; Tracked objects:
   211 ;;		On entry : 0/0
   212 ;;		On exit  : 0/0
   213 ;;		Unchanged: 0/0
   214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   215 ;;      Params:         0       0       0       0       0       0       0
   216 ;;      Locals:        14       0       0       0       0       0       0
   217 ;;      Temps:          2       0       0       0       0       0       0
   218 ;;      Totals:        16       0       0       0       0       0       0
   219 ;;Total ram usage:       16 bytes
   220 ;; Hardware stack levels required when called: 2
   221 ;; This function calls:
   222 ;;		_display
   223 ;;		_init_config
   224 ;; This function is called by:
   225 ;;		Startup code after reset
   226 ;; This function uses a non-reentrant model
   227 ;;
   228                           
   229                           	psect	text0
   230   0007E4                     __ptext0:
   231                           	callstack 0
   232   0007E4                     _main:
   233                           	callstack 29
   234   0007E4                     
   235                           ;A13-main.c: 20:     init_config();
   236   0007E4  EC81  F004         	call	_init_config	;wreg free
   237   0007E8                     
   238                           ;A13-main.c: 21:     unsigned char ssd[10];;A13-main.c: 22:     int delay=0;
   239   0007E8  0E00               	movlw	0
   240   0007EA  6E2D               	movwf	(main@delay+1)^0,c
   241   0007EC  0E00               	movlw	0
   242   0007EE  6E2C               	movwf	main@delay^0,c
   243   0007F0                     
   244                           ;A13-main.c: 23:     int count=0;
   245   0007F0  0E00               	movlw	0
   246   0007F2  6E2B               	movwf	(main@count+1)^0,c
   247   0007F4  0E00               	movlw	0
   248   0007F6  6E2A               	movwf	main@count^0,c
   249   0007F8                     
   250                           ;A13-main.c: 25:         ssd[0] = digits[0];
   251   0007F8  C02E  F020         	movff	_digits,main@ssd
   252   0007FC                     
   253                           ;A13-main.c: 26:         ssd[1] = digits[1];
   254   0007FC  C02F  F021         	movff	_digits+1,main@ssd+1
   255   000800                     
   256                           ;A13-main.c: 27:         ssd[2] = digits[2];
   257   000800  C030  F022         	movff	_digits+2,main@ssd+2
   258   000804                     
   259                           ;A13-main.c: 28:         ssd[3] = digits[3];
   260   000804  C031  F023         	movff	_digits+3,main@ssd+3
   261   000808                     
   262                           ;A13-main.c: 29:         ssd[4] = digits[4];
   263   000808  C032  F024         	movff	_digits+4,main@ssd+4
   264   00080C                     
   265                           ;A13-main.c: 30:         ssd[5] = digits[5];
   266   00080C  C033  F025         	movff	_digits+5,main@ssd+5
   267   000810                     
   268                           ;A13-main.c: 31:         ssd[6] = digits[6];
   269   000810  C034  F026         	movff	_digits+6,main@ssd+6
   270   000814                     
   271                           ;A13-main.c: 32:         ssd[7] = digits[7];
   272   000814  C035  F027         	movff	_digits+7,main@ssd+7
   273   000818                     
   274                           ;A13-main.c: 33:         ssd[8] = digits[8];
   275   000818  C036  F028         	movff	_digits+8,main@ssd+8
   276   00081C                     
   277                           ;A13-main.c: 34:         ssd[9] = digits[9];
   278   00081C  C037  F029         	movff	_digits+9,main@ssd+9
   279   000820                     l997:
   280                           
   281                           ;A13-main.c: 36:     {;A13-main.c: 37:         if(RC0==0)
   282   000820  B082               	btfsc	3970,0,c	;volatile
   283   000822  EF15  F004         	goto	u231
   284   000826  EF17  F004         	goto	u230
   285   00082A                     u231:
   286   00082A  EF31  F004         	goto	l1003
   287   00082E                     u230:
   288   00082E                     
   289                           ;A13-main.c: 38:         {;A13-main.c: 39:             if(delay++>100)
   290   00082E  502C               	movf	main@delay^0,w,c
   291   000830  6E1E               	movwf	??_main^0,c
   292   000832  502D               	movf	(main@delay+1)^0,w,c
   293   000834  6E1F               	movwf	(??_main+1)^0,c
   294   000836  4A2C               	infsnz	main@delay^0,f,c
   295   000838  2A2D               	incf	(main@delay+1)^0,f,c
   296   00083A  BE1F               	btfsc	(??_main+1)^0,7,c
   297   00083C  EF29  F004         	goto	u241
   298   000840  501F               	movf	(??_main+1)^0,w,c
   299   000842  E109               	bnz	u240
   300   000844  0E65               	movlw	101
   301   000846  5C1E               	subwf	??_main^0,w,c
   302   000848  A0D8               	btfss	status,0,c
   303   00084A  EF29  F004         	goto	u241
   304   00084E  EF2B  F004         	goto	u240
   305   000852                     u241:
   306   000852  EF52  F004         	goto	l1013
   307   000856                     u240:
   308   000856                     
   309                           ;A13-main.c: 40:             {;A13-main.c: 41:                 count=0;
   310   000856  0E00               	movlw	0
   311   000858  6E2B               	movwf	(main@count+1)^0,c
   312   00085A  0E00               	movlw	0
   313   00085C  6E2A               	movwf	main@count^0,c
   314   00085E  EF52  F004         	goto	l1013
   315   000862                     l1003:
   316   000862  BE2D               	btfsc	(main@delay+1)^0,7,c
   317   000864  EF3F  F004         	goto	u250
   318   000868  502D               	movf	(main@delay+1)^0,w,c
   319   00086A  E107               	bnz	u251
   320   00086C  0E64               	movlw	100
   321   00086E  5C2C               	subwf	main@delay^0,w,c
   322   000870  B0D8               	btfsc	status,0,c
   323   000872  EF3D  F004         	goto	u251
   324   000876  EF3F  F004         	goto	u250
   325   00087A                     u251:
   326   00087A  EF4E  F004         	goto	l1009
   327   00087E                     u250:
   328   00087E  BE2D               	btfsc	(main@delay+1)^0,7,c
   329   000880  EF4A  F004         	goto	u261
   330   000884  502D               	movf	(main@delay+1)^0,w,c
   331   000886  E108               	bnz	u260
   332   000888  042C               	decf	main@delay^0,w,c
   333   00088A  A0D8               	btfss	status,0,c
   334   00088C  EF4A  F004         	goto	u261
   335   000890  EF4C  F004         	goto	u260
   336   000894                     u261:
   337   000894  EF4E  F004         	goto	l1009
   338   000898                     u260:
   339   000898                     
   340                           ;A13-main.c: 47:         {;A13-main.c: 48:             count++;
   341   000898  4A2A               	infsnz	main@count^0,f,c
   342   00089A  2A2B               	incf	(main@count+1)^0,f,c
   343   00089C                     l1009:
   344                           
   345                           ;A13-main.c: 49:             delay=0;
   346   00089C  0E00               	movlw	0
   347   00089E  6E2D               	movwf	(main@delay+1)^0,c
   348   0008A0  0E00               	movlw	0
   349   0008A2  6E2C               	movwf	main@delay^0,c
   350   0008A4                     l1013:
   351                           
   352                           ;A13-main.c: 56:         display(ssd,count);
   353   0008A4  0E20               	movlw	low main@ssd
   354   0008A6  6E01               	movwf	display@data^0,c
   355   0008A8  C02A  F002         	movff	main@count,display@count
   356   0008AC  C02B  F003         	movff	main@count+1,display@count+1
   357   0008B0  EC01  F003         	call	_display	;wreg free
   358   0008B4  EF10  F004         	goto	l997
   359   0008B8  EF00  F000         	goto	start
   360   0008BC                     __end_of_main:
   361                           	callstack 0
   362                           
   363 ;; *************** function _init_config *****************
   364 ;; Defined at:
   365 ;;		line 12 in file "A13-main.c"
   366 ;; Parameters:    Size  Location     Type
   367 ;;		None
   368 ;; Auto vars:     Size  Location     Type
   369 ;;		None
   370 ;; Return value:  Size  Location     Type
   371 ;;                  1    wreg      void 
   372 ;; Registers used:
   373 ;;		wreg, status,2, status,0, cstack
   374 ;; Tracked objects:
   375 ;;		On entry : 0/0
   376 ;;		On exit  : 0/0
   377 ;;		Unchanged: 0/0
   378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   379 ;;      Params:         0       0       0       0       0       0       0
   380 ;;      Locals:         0       0       0       0       0       0       0
   381 ;;      Temps:          0       0       0       0       0       0       0
   382 ;;      Totals:         0       0       0       0       0       0       0
   383 ;;Total ram usage:        0 bytes
   384 ;; Hardware stack levels used: 1
   385 ;; Hardware stack levels required when called: 1
   386 ;; This function calls:
   387 ;;		_init_ssd
   388 ;; This function is called by:
   389 ;;		_main
   390 ;; This function uses a non-reentrant model
   391 ;;
   392                           
   393                           	psect	text1
   394   000902                     __ptext1:
   395                           	callstack 0
   396   000902                     _init_config:
   397                           	callstack 29
   398   000902                     
   399                           ;A13-main.c: 14:     init_ssd();
   400   000902  EC71  F004         	call	_init_ssd	;wreg free
   401   000906  0012               	return		;funcret
   402   000908                     __end_of_init_config:
   403                           	callstack 0
   404                           
   405 ;; *************** function _init_ssd *****************
   406 ;; Defined at:
   407 ;;		line 11 in file "read.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;		None
   410 ;; Auto vars:     Size  Location     Type
   411 ;;		None
   412 ;; Return value:  Size  Location     Type
   413 ;;                  1    wreg      void 
   414 ;; Registers used:
   415 ;;		wreg, status,2, status,0
   416 ;; Tracked objects:
   417 ;;		On entry : 0/0
   418 ;;		On exit  : 0/0
   419 ;;		Unchanged: 0/0
   420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   421 ;;      Params:         0       0       0       0       0       0       0
   422 ;;      Locals:         0       0       0       0       0       0       0
   423 ;;      Temps:          0       0       0       0       0       0       0
   424 ;;      Totals:         0       0       0       0       0       0       0
   425 ;;Total ram usage:        0 bytes
   426 ;; Hardware stack levels used: 1
   427 ;; This function calls:
   428 ;;		Nothing
   429 ;; This function is called by:
   430 ;;		_init_config
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434                           	psect	text2
   435   0008E2                     __ptext2:
   436                           	callstack 0
   437   0008E2                     _init_ssd:
   438                           	callstack 29
   439   0008E2                     
   440                           ;read.c: 13:     ADCON1 =0x0f;
   441   0008E2  0E0F               	movlw	15
   442   0008E4  6EC1               	movwf	193,c	;volatile
   443                           
   444                           ;read.c: 14:     TRISD=0x00;
   445   0008E6  0E00               	movlw	0
   446   0008E8  6E95               	movwf	149,c	;volatile
   447   0008EA                     
   448                           ;read.c: 15:     TRISA=TRISA&0xF0;
   449   0008EA  5092               	movf	146,w,c	;volatile
   450   0008EC  0BF0               	andlw	240
   451   0008EE  6E92               	movwf	146,c	;volatile
   452   0008F0                     
   453                           ;read.c: 16:     PORTA=PORTA&0xF0;
   454   0008F0  5080               	movf	128,w,c	;volatile
   455   0008F2  0BF0               	andlw	240
   456   0008F4  6E80               	movwf	128,c	;volatile
   457   0008F6  0012               	return		;funcret
   458   0008F8                     __end_of_init_ssd:
   459                           	callstack 0
   460                           
   461 ;; *************** function _display *****************
   462 ;; Defined at:
   463 ;;		line 19 in file "read.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;  data            1    0[COMRAM] PTR unsigned char 
   466 ;;		 -> main@ssd(10), 
   467 ;;  count           2    1[COMRAM] int 
   468 ;; Auto vars:     Size  Location     Type
   469 ;;  wait            4   15[COMRAM] unsigned long 
   470 ;;  wait            4   11[COMRAM] unsigned long 
   471 ;;  wait            4    7[COMRAM] unsigned long 
   472 ;;  wait            4    3[COMRAM] unsigned long 
   473 ;;  i3              2   27[COMRAM] int 
   474 ;;  i2              2   25[COMRAM] int 
   475 ;;  i1              2   23[COMRAM] int 
   476 ;;  i               2   21[COMRAM] int 
   477 ;;  c               2   19[COMRAM] int 
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   487 ;;      Params:         3       0       0       0       0       0       0
   488 ;;      Locals:        26       0       0       0       0       0       0
   489 ;;      Temps:          0       0       0       0       0       0       0
   490 ;;      Totals:        29       0       0       0       0       0       0
   491 ;;Total ram usage:       29 bytes
   492 ;; Hardware stack levels used: 1
   493 ;; This function calls:
   494 ;;		Nothing
   495 ;; This function is called by:
   496 ;;		_main
   497 ;; This function uses a non-reentrant model
   498 ;;
   499                           
   500                           	psect	text3
   501   000602                     __ptext3:
   502                           	callstack 0
   503   000602                     _display:
   504                           	callstack 30
   505   000602                     
   506                           ;read.c: 19: void display(unsigned char *data,int count);read.c: 20: {;read.c: 21:     i
      +                          nt c=0;
   507   000602  0E00               	movlw	0
   508   000604  6E15               	movwf	(display@c+1)^0,c
   509   000606  0E00               	movlw	0
   510   000608  6E14               	movwf	display@c^0,c
   511                           
   512                           ;read.c: 22:     for (int i=0;i<10;i++)
   513   00060A  0E00               	movlw	0
   514   00060C  6E17               	movwf	(display@i+1)^0,c
   515   00060E  0E00               	movlw	0
   516   000610  6E16               	movwf	display@i^0,c
   517   000612                     l885:
   518                           
   519                           ;read.c: 23:     {;read.c: 25:         for (int i1=0;i1<10;i1++)
   520   000612  0E00               	movlw	0
   521   000614  6E19               	movwf	(display@i1+1)^0,c
   522   000616  0E00               	movlw	0
   523   000618  6E18               	movwf	display@i1^0,c
   524   00061A                     l891:
   525                           
   526                           ;read.c: 26:         {;read.c: 29:             for (int i2=0;i2<10;i2++)
   527   00061A  0E00               	movlw	0
   528   00061C  6E1B               	movwf	(display@i2+1)^0,c
   529   00061E  0E00               	movlw	0
   530   000620  6E1A               	movwf	display@i2^0,c
   531   000622                     l897:
   532                           
   533                           ;read.c: 30:             {;read.c: 33:                 for (int i3=0;i3<10;i3++)
   534   000622  0E00               	movlw	0
   535   000624  6E1D               	movwf	(display@i3+1)^0,c
   536   000626  0E00               	movlw	0
   537   000628  6E1C               	movwf	display@i3^0,c
   538   00062A                     l903:
   539                           
   540                           ;read.c: 34:                 {;read.c: 36:                     if(c==count)
   541   00062A  5002               	movf	display@count^0,w,c
   542   00062C  1814               	xorwf	display@c^0,w,c
   543   00062E  E107               	bnz	u141
   544   000630  5003               	movf	(display@count+1)^0,w,c
   545   000632  1815               	xorwf	(display@c+1)^0,w,c
   546   000634  A4D8               	btfss	status,2,c
   547   000636  EF1F  F003         	goto	u141
   548   00063A  EF21  F003         	goto	u140
   549   00063E                     u141:
   550   00063E  EFAB  F003         	goto	l953
   551   000642                     u140:
   552   000642                     
   553                           ;read.c: 37:                     {;read.c: 38:                         PORTD=data[i];
   554   000642  5001               	movf	display@data^0,w,c
   555   000644  2416               	addwf	display@i^0,w,c
   556   000646  6ED9               	movwf	fsr2l,c
   557   000648  6ADA               	clrf	fsr2h,c
   558   00064A  50DF               	movf	indf2,w,c
   559   00064C  6E83               	movwf	131,c	;volatile
   560   00064E                     
   561                           ;read.c: 39:                         PORTA=(PORTA&0xF0)|(1<<0);
   562   00064E  5080               	movf	128,w,c	;volatile
   563   000650  0BF0               	andlw	240
   564   000652  0901               	iorlw	1
   565   000654  6E80               	movwf	128,c	;volatile
   566   000656                     
   567                           ;read.c: 40:                         for (unsigned long int wait=1000;wait>0;wait--);
   568   000656  0EE8               	movlw	232
   569   000658  6E04               	movwf	display@wait^0,c
   570   00065A  0E03               	movlw	3
   571   00065C  6E05               	movwf	(display@wait+1)^0,c
   572   00065E  0E00               	movlw	0
   573   000660  6E06               	movwf	(display@wait+2)^0,c
   574   000662  0E00               	movlw	0
   575   000664  6E07               	movwf	(display@wait+3)^0,c
   576   000666                     l915:
   577   000666  0604               	decf	display@wait^0,f,c
   578   000668  0E00               	movlw	0
   579   00066A  5A05               	subwfb	(display@wait+1)^0,f,c
   580   00066C  5A06               	subwfb	(display@wait+2)^0,f,c
   581   00066E  5A07               	subwfb	(display@wait+3)^0,f,c
   582   000670  5004               	movf	display@wait^0,w,c
   583   000672  1005               	iorwf	(display@wait+1)^0,w,c
   584   000674  1006               	iorwf	(display@wait+2)^0,w,c
   585   000676  1007               	iorwf	(display@wait+3)^0,w,c
   586   000678  A4D8               	btfss	status,2,c
   587   00067A  EF41  F003         	goto	u151
   588   00067E  EF43  F003         	goto	u150
   589   000682                     u151:
   590   000682  EF33  F003         	goto	l915
   591   000686                     u150:
   592   000686                     
   593                           ;read.c: 41:                         PORTD=data[i1];
   594   000686  5001               	movf	display@data^0,w,c
   595   000688  2418               	addwf	display@i1^0,w,c
   596   00068A  6ED9               	movwf	fsr2l,c
   597   00068C  6ADA               	clrf	fsr2h,c
   598   00068E  50DF               	movf	indf2,w,c
   599   000690  6E83               	movwf	131,c	;volatile
   600   000692                     
   601                           ;read.c: 42:                         PORTA=(PORTA&0xF0)|(1<<1);
   602   000692  5080               	movf	128,w,c	;volatile
   603   000694  0BF0               	andlw	240
   604   000696  0902               	iorlw	2
   605   000698  6E80               	movwf	128,c	;volatile
   606   00069A                     
   607                           ;read.c: 43:                         for (unsigned long int wait=1000;wait>0;wait--);
   608   00069A  0EE8               	movlw	232
   609   00069C  6E08               	movwf	display@wait_62^0,c
   610   00069E  0E03               	movlw	3
   611   0006A0  6E09               	movwf	(display@wait_62+1)^0,c
   612   0006A2  0E00               	movlw	0
   613   0006A4  6E0A               	movwf	(display@wait_62+2)^0,c
   614   0006A6  0E00               	movlw	0
   615   0006A8  6E0B               	movwf	(display@wait_62+3)^0,c
   616   0006AA                     l927:
   617   0006AA  0608               	decf	display@wait_62^0,f,c
   618   0006AC  0E00               	movlw	0
   619   0006AE  5A09               	subwfb	(display@wait_62+1)^0,f,c
   620   0006B0  5A0A               	subwfb	(display@wait_62+2)^0,f,c
   621   0006B2  5A0B               	subwfb	(display@wait_62+3)^0,f,c
   622   0006B4  5008               	movf	display@wait_62^0,w,c
   623   0006B6  1009               	iorwf	(display@wait_62+1)^0,w,c
   624   0006B8  100A               	iorwf	(display@wait_62+2)^0,w,c
   625   0006BA  100B               	iorwf	(display@wait_62+3)^0,w,c
   626   0006BC  A4D8               	btfss	status,2,c
   627   0006BE  EF63  F003         	goto	u161
   628   0006C2  EF65  F003         	goto	u160
   629   0006C6                     u161:
   630   0006C6  EF55  F003         	goto	l927
   631   0006CA                     u160:
   632   0006CA                     
   633                           ;read.c: 44:                         PORTD=data[i2];
   634   0006CA  5001               	movf	display@data^0,w,c
   635   0006CC  241A               	addwf	display@i2^0,w,c
   636   0006CE  6ED9               	movwf	fsr2l,c
   637   0006D0  6ADA               	clrf	fsr2h,c
   638   0006D2  50DF               	movf	indf2,w,c
   639   0006D4  6E83               	movwf	131,c	;volatile
   640   0006D6                     
   641                           ;read.c: 45:                         PORTA=(PORTA&0xF0)|(1<<2);
   642   0006D6  5080               	movf	128,w,c	;volatile
   643   0006D8  0BF0               	andlw	240
   644   0006DA  0904               	iorlw	4
   645   0006DC  6E80               	movwf	128,c	;volatile
   646   0006DE                     
   647                           ;read.c: 46:                         for (unsigned long int wait=1000;wait>0;wait--);
   648   0006DE  0EE8               	movlw	232
   649   0006E0  6E0C               	movwf	display@wait_63^0,c
   650   0006E2  0E03               	movlw	3
   651   0006E4  6E0D               	movwf	(display@wait_63+1)^0,c
   652   0006E6  0E00               	movlw	0
   653   0006E8  6E0E               	movwf	(display@wait_63+2)^0,c
   654   0006EA  0E00               	movlw	0
   655   0006EC  6E0F               	movwf	(display@wait_63+3)^0,c
   656   0006EE                     l939:
   657   0006EE  060C               	decf	display@wait_63^0,f,c
   658   0006F0  0E00               	movlw	0
   659   0006F2  5A0D               	subwfb	(display@wait_63+1)^0,f,c
   660   0006F4  5A0E               	subwfb	(display@wait_63+2)^0,f,c
   661   0006F6  5A0F               	subwfb	(display@wait_63+3)^0,f,c
   662   0006F8  500C               	movf	display@wait_63^0,w,c
   663   0006FA  100D               	iorwf	(display@wait_63+1)^0,w,c
   664   0006FC  100E               	iorwf	(display@wait_63+2)^0,w,c
   665   0006FE  100F               	iorwf	(display@wait_63+3)^0,w,c
   666   000700  A4D8               	btfss	status,2,c
   667   000702  EF85  F003         	goto	u171
   668   000706  EF87  F003         	goto	u170
   669   00070A                     u171:
   670   00070A  EF77  F003         	goto	l939
   671   00070E                     u170:
   672   00070E                     
   673                           ;read.c: 47:                         PORTD=data[i3];
   674   00070E  5001               	movf	display@data^0,w,c
   675   000710  241C               	addwf	display@i3^0,w,c
   676   000712  6ED9               	movwf	fsr2l,c
   677   000714  6ADA               	clrf	fsr2h,c
   678   000716  50DF               	movf	indf2,w,c
   679   000718  6E83               	movwf	131,c	;volatile
   680   00071A                     
   681                           ;read.c: 48:                         PORTA=(PORTA&0xF0)|(1<<3);
   682   00071A  5080               	movf	128,w,c	;volatile
   683   00071C  0BF0               	andlw	240
   684   00071E  0908               	iorlw	8
   685   000720  6E80               	movwf	128,c	;volatile
   686   000722                     
   687                           ;read.c: 49:                         for (unsigned long int wait=1000;wait>0;wait--);
   688   000722  0EE8               	movlw	232
   689   000724  6E10               	movwf	display@wait_64^0,c
   690   000726  0E03               	movlw	3
   691   000728  6E11               	movwf	(display@wait_64+1)^0,c
   692   00072A  0E00               	movlw	0
   693   00072C  6E12               	movwf	(display@wait_64+2)^0,c
   694   00072E  0E00               	movlw	0
   695   000730  6E13               	movwf	(display@wait_64+3)^0,c
   696   000732                     l951:
   697   000732  0610               	decf	display@wait_64^0,f,c
   698   000734  0E00               	movlw	0
   699   000736  5A11               	subwfb	(display@wait_64+1)^0,f,c
   700   000738  5A12               	subwfb	(display@wait_64+2)^0,f,c
   701   00073A  5A13               	subwfb	(display@wait_64+3)^0,f,c
   702   00073C  5010               	movf	display@wait_64^0,w,c
   703   00073E  1011               	iorwf	(display@wait_64+1)^0,w,c
   704   000740  1012               	iorwf	(display@wait_64+2)^0,w,c
   705   000742  1013               	iorwf	(display@wait_64+3)^0,w,c
   706   000744  A4D8               	btfss	status,2,c
   707   000746  EFA7  F003         	goto	u181
   708   00074A  EFA9  F003         	goto	u180
   709   00074E                     u181:
   710   00074E  EF99  F003         	goto	l951
   711   000752                     u180:
   712   000752  EFF1  F003         	goto	l59
   713   000756                     l953:
   714                           
   715                           ;read.c: 52:                     c=c+1;
   716   000756  0E01               	movlw	1
   717   000758  2414               	addwf	display@c^0,w,c
   718   00075A  6E14               	movwf	display@c^0,c
   719   00075C  0E00               	movlw	0
   720   00075E  2015               	addwfc	(display@c+1)^0,w,c
   721   000760  6E15               	movwf	(display@c+1)^0,c
   722   000762                     
   723                           ;read.c: 53:                 }
   724   000762  4A1C               	infsnz	display@i3^0,f,c
   725   000764  2A1D               	incf	(display@i3+1)^0,f,c
   726   000766  BE1D               	btfsc	(display@i3+1)^0,7,c
   727   000768  EFBF  F003         	goto	u191
   728   00076C  501D               	movf	(display@i3+1)^0,w,c
   729   00076E  E109               	bnz	u190
   730   000770  0E0A               	movlw	10
   731   000772  5C1C               	subwf	display@i3^0,w,c
   732   000774  A0D8               	btfss	status,0,c
   733   000776  EFBF  F003         	goto	u191
   734   00077A  EFC1  F003         	goto	u190
   735   00077E                     u191:
   736   00077E  EF15  F003         	goto	l903
   737   000782                     u190:
   738   000782                     
   739                           ;read.c: 54:             }
   740   000782  4A1A               	infsnz	display@i2^0,f,c
   741   000784  2A1B               	incf	(display@i2+1)^0,f,c
   742   000786  BE1B               	btfsc	(display@i2+1)^0,7,c
   743   000788  EFCF  F003         	goto	u201
   744   00078C  501B               	movf	(display@i2+1)^0,w,c
   745   00078E  E109               	bnz	u200
   746   000790  0E0A               	movlw	10
   747   000792  5C1A               	subwf	display@i2^0,w,c
   748   000794  A0D8               	btfss	status,0,c
   749   000796  EFCF  F003         	goto	u201
   750   00079A  EFD1  F003         	goto	u200
   751   00079E                     u201:
   752   00079E  EF11  F003         	goto	l897
   753   0007A2                     u200:
   754   0007A2                     
   755                           ;read.c: 55:         }
   756   0007A2  4A18               	infsnz	display@i1^0,f,c
   757   0007A4  2A19               	incf	(display@i1+1)^0,f,c
   758   0007A6  BE19               	btfsc	(display@i1+1)^0,7,c
   759   0007A8  EFDF  F003         	goto	u211
   760   0007AC  5019               	movf	(display@i1+1)^0,w,c
   761   0007AE  E109               	bnz	u210
   762   0007B0  0E0A               	movlw	10
   763   0007B2  5C18               	subwf	display@i1^0,w,c
   764   0007B4  A0D8               	btfss	status,0,c
   765   0007B6  EFDF  F003         	goto	u211
   766   0007BA  EFE1  F003         	goto	u210
   767   0007BE                     u211:
   768   0007BE  EF0D  F003         	goto	l891
   769   0007C2                     u210:
   770   0007C2                     
   771                           ;read.c: 56:     }
   772   0007C2  4A16               	infsnz	display@i^0,f,c
   773   0007C4  2A17               	incf	(display@i+1)^0,f,c
   774   0007C6  BE17               	btfsc	(display@i+1)^0,7,c
   775   0007C8  EFEF  F003         	goto	u221
   776   0007CC  5017               	movf	(display@i+1)^0,w,c
   777   0007CE  E109               	bnz	u220
   778   0007D0  0E0A               	movlw	10
   779   0007D2  5C16               	subwf	display@i^0,w,c
   780   0007D4  A0D8               	btfss	status,0,c
   781   0007D6  EFEF  F003         	goto	u221
   782   0007DA  EFF1  F003         	goto	u220
   783   0007DE                     u221:
   784   0007DE  EF09  F003         	goto	l885
   785   0007E2                     u220:
   786   0007E2                     l59:
   787   0007E2  0012               	return		;funcret
   788   0007E4                     __end_of_display:
   789                           	callstack 0
   790                           
   791                           	psect	smallconst
   792   000600                     __psmallconst:
   793                           	callstack 0
   794   000600  00                 	db	0
   795   000601  00                 	db	0	; dummy byte at the end
   796   000000                     
   797                           	psect	rparam
   798   000000                     
   799                           	psect	idloc
   800                           
   801                           ;Config register IDLOC0 @ 0x200000
   802                           ;	unspecified, using default values
   803   200000                     	org	2097152
   804   200000  FF                 	db	255
   805                           
   806                           ;Config register IDLOC1 @ 0x200001
   807                           ;	unspecified, using default values
   808   200001                     	org	2097153
   809   200001  FF                 	db	255
   810                           
   811                           ;Config register IDLOC2 @ 0x200002
   812                           ;	unspecified, using default values
   813   200002                     	org	2097154
   814   200002  FF                 	db	255
   815                           
   816                           ;Config register IDLOC3 @ 0x200003
   817                           ;	unspecified, using default values
   818   200003                     	org	2097155
   819   200003  FF                 	db	255
   820                           
   821                           ;Config register IDLOC4 @ 0x200004
   822                           ;	unspecified, using default values
   823   200004                     	org	2097156
   824   200004  FF                 	db	255
   825                           
   826                           ;Config register IDLOC5 @ 0x200005
   827                           ;	unspecified, using default values
   828   200005                     	org	2097157
   829   200005  FF                 	db	255
   830                           
   831                           ;Config register IDLOC6 @ 0x200006
   832                           ;	unspecified, using default values
   833   200006                     	org	2097158
   834   200006  FF                 	db	255
   835                           
   836                           ;Config register IDLOC7 @ 0x200007
   837                           ;	unspecified, using default values
   838   200007                     	org	2097159
   839   200007  FF                 	db	255
   840                           
   841                           	psect	config
   842                           
   843                           ; Padding undefined space
   844   300000                     	org	3145728
   845   300000  FF                 	db	255
   846                           
   847                           ;Config register CONFIG1H @ 0x300001
   848                           ;	unspecified, using default values
   849                           ;	Oscillator Selection bits
   850                           ;	OSC = 0x7, unprogrammed default
   851                           ;	Fail-Safe Clock Monitor Enable bit
   852                           ;	FCMEN = 0x0, unprogrammed default
   853                           ;	Internal/External Oscillator Switchover bit
   854                           ;	IESO = 0x0, unprogrammed default
   855   300001                     	org	3145729
   856   300001  07                 	db	7
   857                           
   858                           ;Config register CONFIG2L @ 0x300002
   859                           ;	unspecified, using default values
   860                           ;	Power-up Timer Enable bit
   861                           ;	PWRT = 0x1, unprogrammed default
   862                           ;	Brown-out Reset Enable bits
   863                           ;	BOREN = 0x3, unprogrammed default
   864                           ;	Brown-out Reset Voltage bits
   865                           ;	BORV = 0x3, unprogrammed default
   866   300002                     	org	3145730
   867   300002  1F                 	db	31
   868                           
   869                           ;Config register CONFIG2H @ 0x300003
   870                           ;	unspecified, using default values
   871                           ;	Watchdog Timer Enable bit
   872                           ;	WDT = 0x1, unprogrammed default
   873                           ;	Watchdog Timer Postscale Select bits
   874                           ;	WDTPS = 0xF, unprogrammed default
   875   300003                     	org	3145731
   876   300003  1F                 	db	31
   877                           
   878                           ; Padding undefined space
   879   300004                     	org	3145732
   880   300004  FF                 	db	255
   881                           
   882                           ;Config register CONFIG3H @ 0x300005
   883                           ;	unspecified, using default values
   884                           ;	PORTB A/D Enable bit
   885                           ;	PBADEN = 0x1, unprogrammed default
   886                           ;	Low-Power Timer 1 Oscillator Enable bit
   887                           ;	LPT1OSC = 0x0, unprogrammed default
   888                           ;	MCLR Pin Enable bit
   889                           ;	MCLRE = 0x1, unprogrammed default
   890   300005                     	org	3145733
   891   300005  82                 	db	130
   892                           
   893                           ;Config register CONFIG4L @ 0x300006
   894                           ;	unspecified, using default values
   895                           ;	Stack Full/Underflow Reset Enable bit
   896                           ;	STVREN = 0x1, unprogrammed default
   897                           ;	Single-Supply ICSP Enable bit
   898                           ;	LVP = 0x1, unprogrammed default
   899                           ;	Boot Block Size Select bit
   900                           ;	BBSIZ = 0x0, unprogrammed default
   901                           ;	Extended Instruction Set Enable bit
   902                           ;	XINST = 0x0, unprogrammed default
   903                           ;	Background Debugger Enable bit
   904                           ;	DEBUG = 0x1, unprogrammed default
   905   300006                     	org	3145734
   906   300006  85                 	db	133
   907                           
   908                           ; Padding undefined space
   909   300007                     	org	3145735
   910   300007  FF                 	db	255
   911                           
   912                           ;Config register CONFIG5L @ 0x300008
   913                           ;	unspecified, using default values
   914                           ;	Code Protection bit
   915                           ;	CP0 = 0x1, unprogrammed default
   916                           ;	Code Protection bit
   917                           ;	CP1 = 0x1, unprogrammed default
   918                           ;	Code Protection bit
   919                           ;	CP2 = 0x1, unprogrammed default
   920                           ;	Code Protection bit
   921                           ;	CP3 = 0x1, unprogrammed default
   922   300008                     	org	3145736
   923   300008  0F                 	db	15
   924                           
   925                           ;Config register CONFIG5H @ 0x300009
   926                           ;	unspecified, using default values
   927                           ;	Boot Block Code Protection bit
   928                           ;	CPB = 0x1, unprogrammed default
   929                           ;	Data EEPROM Code Protection bit
   930                           ;	CPD = 0x1, unprogrammed default
   931   300009                     	org	3145737
   932   300009  C0                 	db	192
   933                           
   934                           ;Config register CONFIG6L @ 0x30000A
   935                           ;	unspecified, using default values
   936                           ;	Write Protection bit
   937                           ;	WRT0 = 0x1, unprogrammed default
   938                           ;	Write Protection bit
   939                           ;	WRT1 = 0x1, unprogrammed default
   940                           ;	Write Protection bit
   941                           ;	WRT2 = 0x1, unprogrammed default
   942                           ;	Write Protection bit
   943                           ;	WRT3 = 0x1, unprogrammed default
   944   30000A                     	org	3145738
   945   30000A  0F                 	db	15
   946                           
   947                           ;Config register CONFIG6H @ 0x30000B
   948                           ;	unspecified, using default values
   949                           ;	Configuration Register Write Protection bit
   950                           ;	WRTC = 0x1, unprogrammed default
   951                           ;	Boot Block Write Protection bit
   952                           ;	WRTB = 0x1, unprogrammed default
   953                           ;	Data EEPROM Write Protection bit
   954                           ;	WRTD = 0x1, unprogrammed default
   955   30000B                     	org	3145739
   956   30000B  E0                 	db	224
   957                           
   958                           ;Config register CONFIG7L @ 0x30000C
   959                           ;	unspecified, using default values
   960                           ;	Table Read Protection bit
   961                           ;	EBTR0 = 0x1, unprogrammed default
   962                           ;	Table Read Protection bit
   963                           ;	EBTR1 = 0x1, unprogrammed default
   964                           ;	Table Read Protection bit
   965                           ;	EBTR2 = 0x1, unprogrammed default
   966                           ;	Table Read Protection bit
   967                           ;	EBTR3 = 0x1, unprogrammed default
   968   30000C                     	org	3145740
   969   30000C  0F                 	db	15
   970                           
   971                           ;Config register CONFIG7H @ 0x30000D
   972                           ;	unspecified, using default values
   973                           ;	Boot Block Table Read Protection bit
   974                           ;	EBTRB = 0x1, unprogrammed default
   975   30000D                     	org	3145741
   976   30000D  40                 	db	64
   977                           tosu	equ	0xFFF
   978                           tosh	equ	0xFFE
   979                           tosl	equ	0xFFD
   980                           stkptr	equ	0xFFC
   981                           pclatu	equ	0xFFB
   982                           pclath	equ	0xFFA
   983                           pcl	equ	0xFF9
   984                           tblptru	equ	0xFF8
   985                           tblptrh	equ	0xFF7
   986                           tblptrl	equ	0xFF6
   987                           tablat	equ	0xFF5
   988                           prodh	equ	0xFF4
   989                           prodl	equ	0xFF3
   990                           indf0	equ	0xFEF
   991                           postinc0	equ	0xFEE
   992                           postdec0	equ	0xFED
   993                           preinc0	equ	0xFEC
   994                           plusw0	equ	0xFEB
   995                           fsr0h	equ	0xFEA
   996                           fsr0l	equ	0xFE9
   997                           wreg	equ	0xFE8
   998                           indf1	equ	0xFE7
   999                           postinc1	equ	0xFE6
  1000                           postdec1	equ	0xFE5
  1001                           preinc1	equ	0xFE4
  1002                           plusw1	equ	0xFE3
  1003                           fsr1h	equ	0xFE2
  1004                           fsr1l	equ	0xFE1
  1005                           bsr	equ	0xFE0
  1006                           indf2	equ	0xFDF
  1007                           postinc2	equ	0xFDE
  1008                           postdec2	equ	0xFDD
  1009                           preinc2	equ	0xFDC
  1010                           plusw2	equ	0xFDB
  1011                           fsr2h	equ	0xFDA
  1012                           fsr2l	equ	0xFD9
  1013                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     45      55
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@data	PTR unsigned char  size(1) Largest target is 10
		 -> main@ssd(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _main->_display

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    1101
                                             29 COMRAM    16    16      0
                            _display
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                           _init_ssd
 ---------------------------------------------------------------------------------
 (2) _init_ssd                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                             29    26      3     764
                                              0 COMRAM    29    26      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
   _init_config
     _init_ssd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      23        0.0%
BITBIGSFRll        280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2D      37       1       57.9%
BITBIGSFRhh         3E      0       0      16        0.0%
BITBIGSFRhlh        2B      0       0      17        0.0%
BITBIGSFRhlll        E      0       0      19        0.0%
BITBIGSFRhllh        2      0       0      18        0.0%
BITBIGSFRlh          1      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      37      22        0.0%
DATA                 0      0      37       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Mar 19 22:22:20 2024

                     l11 0906                       l39 08F6                       l59 07E2  
                    l741 0902                      l903 062A                      l735 08E2  
                    l921 069A                      l905 0642                      l737 08EA  
                    l931 06D6                      l915 0666                      l907 064E  
                    l739 08F0                      l941 070E                      l933 06DE  
                    l917 0686                      l909 0656                      l951 0732  
                    l943 071A                      l927 06AA                      l919 0692  
                    l961 0786                      l945 0722                      l929 06CA  
                    l953 0756                      l963 07A2                      l955 0762  
                    l939 06EE                      l891 061A                      l971 07E4  
                    l965 07A6                      l957 0766                      l885 0612  
                    l981 0800                      l973 07E8                      l967 07C2  
                    l959 0782                      l879 0602                      l991 0814  
                    l983 0804                      l975 07F0                      l969 07C6  
                    l897 0622                      l993 0818                      l985 0808  
                    l977 07F8                      l995 081C                      l987 080C  
                    l979 07FC                      l997 0820                      l989 0810  
                    l999 082E                      _RC0 7C10                      u200 07A2  
                    u201 079E                      u210 07C2                      u211 07BE  
                    u220 07E2                      u140 0642                      u221 07DE  
                    u141 063E                      u150 0686                      u230 082E  
                    u151 0682                      u231 082A                      u160 06CA  
                    u240 0856                      u161 06C6                      u241 0852  
                    u170 070E                      u250 087E                      u171 070A  
                    u251 087A                      u180 0752                      u260 0898  
                    u181 074E                      u261 0894                      u190 0782  
                    u191 077E                     l1001 0856                     l1003 0862  
                   l1005 087E                     l1013 08A4                     l1007 0898  
                   l1009 089C              display@data 0001              display@wait 0004  
                   _main 07E4                     fsr2h 0FDA                     indf2 0FDF  
                   fsr1l 0FE1                     fsr2l 0FD9                     start 0000  
           ___param_bank 0000                    ?_main 0001             ?_init_config 0001  
                  _PORTA 0F80                    _PORTD 0F83                    _TRISA 0F92  
                  _TRISD 0F95             display@count 0002          __end_of_display 07E4  
                  tablat 0FF5                    status 0FD8          __initialization 08BC  
           __end_of_main 08BC                   ??_main 001E            __activetblptr 0000  
                 _ADCON1 0FC1                   _digits 002E         __end_of_init_ssd 08F8  
                 isa$std 0001                ??_display 0004             __pdataCOMRAM 002E  
           __mediumconst 0000                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8               __accesstop 0060  __end_of__initialization 08DC  
          ___rparam_used 0001           __pcstackCOMRAM 0001                ?_init_ssd 0001  
                __Hparam 0000                  __Lparam 0000           display@wait_62 0008  
         display@wait_63 000C           display@wait_64 0010             __psmallconst 0600  
                __pcinit 08BC                  __ramtop 0600                  __ptext0 07E4  
                __ptext1 0902                  __ptext2 08E2                  __ptext3 0602  
                _display 0602                  main@ssd 0020     end_of_initialization 08DC  
             ??_init_ssd 0001                  postdec1 0FE5                  postinc0 0FEE  
          __pidataCOMRAM 08F8      start_initialization 08BC            ??_init_config 0001  
               ?_display 0001              __smallconst 0600      __end_of_init_config 0908  
              main@delay 002C                main@count 002A                display@i1 0018  
              display@i2 001A                display@i3 001C                copy_data0 08D0  
               __Hrparam 0000                 __Lrparam 0000              _init_config 0902  
               _init_ssd 08E2                 isa$xinst 0000                 display@c 0014  
               display@i 0016  
