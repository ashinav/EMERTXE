

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Mar 20 12:11:17 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4580 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     
    59                           	psect	idataCOMRAM
    60   000CD0                     __pidataCOMRAM:
    61                           	callstack 0
    62                           
    63                           ;initializer for _digits
    64   000CD0  E7                 	db	231
    65   000CD1  21                 	db	33
    66   000CD2  CB                 	db	203
    67   000CD3  6B                 	db	107
    68   000CD4  2D                 	db	45
    69   000CD5  6E                 	db	110
    70   000CD6  EE                 	db	238
    71   000CD7  23                 	db	35
    72   000CD8  EF                 	db	239
    73   000CD9  6F                 	db	111
    74   000000                     _EECON2	set	4007
    75   000000                     _EEDATA	set	4008
    76   000000                     _TRISC	set	3988
    77   000000                     _PORTB	set	3969
    78   000000                     _TRISB	set	3987
    79   000000                     _PORTD	set	3971
    80   000000                     _RC0	set	31760
    81   000000                     _WR	set	32049
    82   000000                     _RD	set	32048
    83   000000                     _WREN	set	32050
    84   000000                     _CFGS	set	32054
    85   000000                     _RC1	set	31761
    86   000000                     _PORTA	set	3968
    87   000000                     _TRISA	set	3986
    88   000000                     _TRISD	set	3989
    89   000000                     _ADCON1	set	4033
    90   000000                     _GIE	set	32663
    91   000000                     _EEADR	set	4009
    92   000000                     _EEIF	set	32012
    93   000000                     _EEPGD	set	32055
    94                           
    95                           ; #config settings
    96                           
    97                           	psect	cinit
    98   000C6E                     __pcinit:
    99                           	callstack 0
   100   000C6E                     start_initialization:
   101                           	callstack 0
   102   000C6E                     __initialization:
   103                           	callstack 0
   104                           
   105                           ; Initialize objects allocated to COMRAM (10 bytes)
   106                           ; load TBLPTR registers with __pidataCOMRAM
   107   000C6E  0ED0               	movlw	low __pidataCOMRAM
   108   000C70  6EF6               	movwf	tblptrl,c
   109   000C72  0E0C               	movlw	high __pidataCOMRAM
   110   000C74  6EF7               	movwf	tblptrh,c
   111   000C76  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   112   000C78  6EF8               	movwf	tblptru,c
   113   000C7A  EE00  F028         	lfsr	0,__pdataCOMRAM
   114   000C7E  EE10 F00A          	lfsr	1,10
   115   000C82                     copy_data0:
   116   000C82  0009               	tblrd		*+
   117   000C84  CFF5 FFEE          	movff	tablat,postinc0
   118   000C88  50E5               	movf	postdec1,w,c
   119   000C8A  50E1               	movf	fsr1l,w,c
   120   000C8C  E1FA               	bnz	copy_data0
   121   000C8E                     end_of_initialization:
   122                           	callstack 0
   123   000C8E                     __end_of__initialization:
   124                           	callstack 0
   125   000C8E  0100               	movlb	0
   126   000C90  EF01  F003         	goto	_main	;jump to C main() function
   127                           
   128                           	psect	dataCOMRAM
   129   000028                     __pdataCOMRAM:
   130                           	callstack 0
   131   000028                     _digits:
   132                           	callstack 0
   133   000028                     	ds	10
   134                           
   135                           	psect	cstackCOMRAM
   136   000001                     __pcstackCOMRAM:
   137                           	callstack 0
   138   000001                     ?___awdiv:
   139                           	callstack 0
   140   000001                     ?___lmul:
   141                           	callstack 0
   142   000001                     display@data:
   143                           	callstack 0
   144   000001                     read_internal_eeprom@address:
   145                           	callstack 0
   146   000001                     write_internal_eeprom@data:
   147                           	callstack 0
   148   000001                     ___awdiv@dividend:
   149                           	callstack 0
   150   000001                     ___lmul@multiplier:
   151                           	callstack 0
   152                           
   153                           ; 4 bytes @ 0x0
   154   000001                     	ds	1
   155   000002                     write_internal_eeprom@address:
   156                           	callstack 0
   157   000002                     display@count:
   158                           	callstack 0
   159                           
   160                           ; 2 bytes @ 0x1
   161   000002                     	ds	1
   162   000003                     ___awdiv@divisor:
   163                           	callstack 0
   164                           
   165                           ; 2 bytes @ 0x2
   166   000003                     	ds	1
   167   000004                     ??_display:
   168                           
   169                           ; 1 bytes @ 0x3
   170   000004                     	ds	1
   171   000005                     ___awdiv@counter:
   172                           	callstack 0
   173   000005                     ___lmul@multiplicand:
   174                           	callstack 0
   175                           
   176                           ; 4 bytes @ 0x4
   177   000005                     	ds	1
   178   000006                     ___awdiv@sign:
   179                           	callstack 0
   180   000006                     display@wait:
   181                           	callstack 0
   182                           
   183                           ; 4 bytes @ 0x5
   184   000006                     	ds	1
   185   000007                     ___awdiv@quotient:
   186                           	callstack 0
   187                           
   188                           ; 2 bytes @ 0x6
   189   000007                     	ds	2
   190   000009                     ?___awmod:
   191                           	callstack 0
   192   000009                     ___awmod@dividend:
   193                           	callstack 0
   194   000009                     ___lmul@product:
   195                           	callstack 0
   196                           
   197                           ; 4 bytes @ 0x8
   198   000009                     	ds	1
   199   00000A                     display@i:
   200                           	callstack 0
   201                           
   202                           ; 2 bytes @ 0x9
   203   00000A                     	ds	1
   204   00000B                     ___awmod@divisor:
   205                           	callstack 0
   206                           
   207                           ; 2 bytes @ 0xA
   208   00000B                     	ds	2
   209   00000D                     ___awmod@counter:
   210                           	callstack 0
   211                           
   212                           ; 1 bytes @ 0xC
   213   00000D                     	ds	1
   214   00000E                     ___awmod@sign:
   215                           	callstack 0
   216                           
   217                           ; 1 bytes @ 0xD
   218   00000E                     	ds	1
   219   00000F                     ??_main:
   220                           
   221                           ; 1 bytes @ 0xE
   222   00000F                     	ds	4
   223   000013                     main@ssd:
   224                           	callstack 0
   225                           
   226                           ; 4 bytes @ 0x12
   227   000013                     	ds	4
   228   000017                     main@delay:
   229                           	callstack 0
   230                           
   231                           ; 4 bytes @ 0x16
   232   000017                     	ds	4
   233   00001B                     main@sum:
   234                           	callstack 0
   235                           
   236                           ; 4 bytes @ 0x1A
   237   00001B                     	ds	4
   238   00001F                     main@a:
   239                           	callstack 0
   240                           
   241                           ; 1 bytes @ 0x1E
   242   00001F                     	ds	1
   243   000020                     main@count:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x1F
   247   000020                     	ds	2
   248   000022                     main@data:
   249                           	callstack 0
   250                           
   251                           ; 4 bytes @ 0x21
   252   000022                     	ds	4
   253   000026                     main@count1:
   254                           	callstack 0
   255                           
   256                           ; 2 bytes @ 0x25
   257   000026                     	ds	2
   258                           
   259 ;;
   260 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   261 ;;
   262 ;; *************** function _main *****************
   263 ;; Defined at:
   264 ;;		line 21 in file "main.c"
   265 ;; Parameters:    Size  Location     Type
   266 ;;		None
   267 ;; Auto vars:     Size  Location     Type
   268 ;;  count1          2   37[COMRAM] int 
   269 ;;  a               1   30[COMRAM] unsigned char 
   270 ;;  data            4   33[COMRAM] unsigned long 
   271 ;;  ssd             4   18[COMRAM] unsigned char [4]
   272 ;;  sum             4   26[COMRAM] unsigned long 
   273 ;;  delay           4   22[COMRAM] long 
   274 ;;  count           2   31[COMRAM] int 
   275 ;;  once            2    0        int 
   276 ;;  c1              2    0        int 
   277 ;;  h               1    0        unsigned char 
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   282 ;; Tracked objects:
   283 ;;		On entry : 0/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   287 ;;      Params:         0       0       0       0       0       0       0
   288 ;;      Locals:        21       0       0       0       0       0       0
   289 ;;      Temps:          4       0       0       0       0       0       0
   290 ;;      Totals:        25       0       0       0       0       0       0
   291 ;;Total ram usage:       25 bytes
   292 ;; Hardware stack levels required when called: 2
   293 ;; This function calls:
   294 ;;		___awdiv
   295 ;;		___awmod
   296 ;;		___lmul
   297 ;;		_display
   298 ;;		_init_config
   299 ;;		_read_internal_eeprom
   300 ;;		_write_internal_eeprom
   301 ;; This function is called by:
   302 ;;		Startup code after reset
   303 ;; This function uses a non-reentrant model
   304 ;;
   305                           
   306                           	psect	text0
   307   000602                     __ptext0:
   308                           	callstack 0
   309   000602                     _main:
   310                           	callstack 29
   311   000602                     
   312                           ;main.c: 23:     init_config();
   313   000602  EC55  F006         	call	_init_config	;wreg free
   314   000606                     
   315                           ;main.c: 24:     unsigned char ssd[4];;main.c: 25:     long int delay=0;
   316   000606  0E00               	movlw	0
   317   000608  6E17               	movwf	main@delay^0,c
   318   00060A  0E00               	movlw	0
   319   00060C  6E18               	movwf	(main@delay+1)^0,c
   320   00060E  0E00               	movlw	0
   321   000610  6E19               	movwf	(main@delay+2)^0,c
   322   000612  0E00               	movlw	0
   323   000614  6E1A               	movwf	(main@delay+3)^0,c
   324   000616                     
   325                           ;main.c: 30:     unsigned long int data=0;
   326   000616  0E00               	movlw	0
   327   000618  6E22               	movwf	main@data^0,c
   328   00061A  0E00               	movlw	0
   329   00061C  6E23               	movwf	(main@data+1)^0,c
   330   00061E  0E00               	movlw	0
   331   000620  6E24               	movwf	(main@data+2)^0,c
   332   000622  0E00               	movlw	0
   333   000624  6E25               	movwf	(main@data+3)^0,c
   334                           
   335                           ;main.c: 32:             sum=(read_internal_eeprom(0x00));
   336   000626  0E00               	movlw	0
   337   000628  EC5F  F006         	call	_read_internal_eeprom
   338   00062C  6E0F               	movwf	??_main^0,c
   339   00062E  500F               	movf	??_main^0,w,c
   340   000630  6E1B               	movwf	main@sum^0,c
   341   000632  6A1C               	clrf	(main@sum+1)^0,c
   342   000634  6A1D               	clrf	(main@sum+2)^0,c
   343   000636  6A1E               	clrf	(main@sum+3)^0,c
   344                           
   345                           ;main.c: 33:             data=(data*10)+sum;
   346   000638  C022  F001         	movff	main@data,___lmul@multiplier
   347   00063C  C023  F002         	movff	main@data+1,___lmul@multiplier+1
   348   000640  C024  F003         	movff	main@data+2,___lmul@multiplier+2
   349   000644  C025  F004         	movff	main@data+3,___lmul@multiplier+3
   350   000648  0E0A               	movlw	10
   351   00064A  6E05               	movwf	___lmul@multiplicand^0,c
   352   00064C  0E00               	movlw	0
   353   00064E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
   354   000650  0E00               	movlw	0
   355   000652  6E07               	movwf	(___lmul@multiplicand+2)^0,c
   356   000654  0E00               	movlw	0
   357   000656  6E08               	movwf	(___lmul@multiplicand+3)^0,c
   358   000658  ECEA  F005         	call	___lmul	;wreg free
   359   00065C  501B               	movf	main@sum^0,w,c
   360   00065E  2401               	addwf	?___lmul^0,w,c
   361   000660  6E22               	movwf	main@data^0,c
   362   000662  501C               	movf	(main@sum+1)^0,w,c
   363   000664  2002               	addwfc	(?___lmul+1)^0,w,c
   364   000666  6E23               	movwf	(main@data+1)^0,c
   365   000668  501D               	movf	(main@sum+2)^0,w,c
   366   00066A  2003               	addwfc	(?___lmul+2)^0,w,c
   367   00066C  6E24               	movwf	(main@data+2)^0,c
   368   00066E  501E               	movf	(main@sum+3)^0,w,c
   369   000670  2004               	addwfc	(?___lmul+3)^0,w,c
   370   000672  6E25               	movwf	(main@data+3)^0,c
   371                           
   372                           ;main.c: 34:             sum=(read_internal_eeprom(0x01));
   373   000674  0E01               	movlw	1
   374   000676  EC5F  F006         	call	_read_internal_eeprom
   375   00067A  6E0F               	movwf	??_main^0,c
   376   00067C  500F               	movf	??_main^0,w,c
   377   00067E  6E1B               	movwf	main@sum^0,c
   378   000680  6A1C               	clrf	(main@sum+1)^0,c
   379   000682  6A1D               	clrf	(main@sum+2)^0,c
   380   000684  6A1E               	clrf	(main@sum+3)^0,c
   381                           
   382                           ;main.c: 35:             data=(data*10)+sum;
   383   000686  C022  F001         	movff	main@data,___lmul@multiplier
   384   00068A  C023  F002         	movff	main@data+1,___lmul@multiplier+1
   385   00068E  C024  F003         	movff	main@data+2,___lmul@multiplier+2
   386   000692  C025  F004         	movff	main@data+3,___lmul@multiplier+3
   387   000696  0E0A               	movlw	10
   388   000698  6E05               	movwf	___lmul@multiplicand^0,c
   389   00069A  0E00               	movlw	0
   390   00069C  6E06               	movwf	(___lmul@multiplicand+1)^0,c
   391   00069E  0E00               	movlw	0
   392   0006A0  6E07               	movwf	(___lmul@multiplicand+2)^0,c
   393   0006A2  0E00               	movlw	0
   394   0006A4  6E08               	movwf	(___lmul@multiplicand+3)^0,c
   395   0006A6  ECEA  F005         	call	___lmul	;wreg free
   396   0006AA  501B               	movf	main@sum^0,w,c
   397   0006AC  2401               	addwf	?___lmul^0,w,c
   398   0006AE  6E22               	movwf	main@data^0,c
   399   0006B0  501C               	movf	(main@sum+1)^0,w,c
   400   0006B2  2002               	addwfc	(?___lmul+1)^0,w,c
   401   0006B4  6E23               	movwf	(main@data+1)^0,c
   402   0006B6  501D               	movf	(main@sum+2)^0,w,c
   403   0006B8  2003               	addwfc	(?___lmul+2)^0,w,c
   404   0006BA  6E24               	movwf	(main@data+2)^0,c
   405   0006BC  501E               	movf	(main@sum+3)^0,w,c
   406   0006BE  2004               	addwfc	(?___lmul+3)^0,w,c
   407   0006C0  6E25               	movwf	(main@data+3)^0,c
   408                           
   409                           ;main.c: 36:             sum=(read_internal_eeprom(0x02));
   410   0006C2  0E02               	movlw	2
   411   0006C4  EC5F  F006         	call	_read_internal_eeprom
   412   0006C8  6E0F               	movwf	??_main^0,c
   413   0006CA  500F               	movf	??_main^0,w,c
   414   0006CC  6E1B               	movwf	main@sum^0,c
   415   0006CE  6A1C               	clrf	(main@sum+1)^0,c
   416   0006D0  6A1D               	clrf	(main@sum+2)^0,c
   417   0006D2  6A1E               	clrf	(main@sum+3)^0,c
   418                           
   419                           ;main.c: 37:             data=(data*10)+sum;
   420   0006D4  C022  F001         	movff	main@data,___lmul@multiplier
   421   0006D8  C023  F002         	movff	main@data+1,___lmul@multiplier+1
   422   0006DC  C024  F003         	movff	main@data+2,___lmul@multiplier+2
   423   0006E0  C025  F004         	movff	main@data+3,___lmul@multiplier+3
   424   0006E4  0E0A               	movlw	10
   425   0006E6  6E05               	movwf	___lmul@multiplicand^0,c
   426   0006E8  0E00               	movlw	0
   427   0006EA  6E06               	movwf	(___lmul@multiplicand+1)^0,c
   428   0006EC  0E00               	movlw	0
   429   0006EE  6E07               	movwf	(___lmul@multiplicand+2)^0,c
   430   0006F0  0E00               	movlw	0
   431   0006F2  6E08               	movwf	(___lmul@multiplicand+3)^0,c
   432   0006F4  ECEA  F005         	call	___lmul	;wreg free
   433   0006F8  501B               	movf	main@sum^0,w,c
   434   0006FA  2401               	addwf	?___lmul^0,w,c
   435   0006FC  6E22               	movwf	main@data^0,c
   436   0006FE  501C               	movf	(main@sum+1)^0,w,c
   437   000700  2002               	addwfc	(?___lmul+1)^0,w,c
   438   000702  6E23               	movwf	(main@data+1)^0,c
   439   000704  501D               	movf	(main@sum+2)^0,w,c
   440   000706  2003               	addwfc	(?___lmul+2)^0,w,c
   441   000708  6E24               	movwf	(main@data+2)^0,c
   442   00070A  501E               	movf	(main@sum+3)^0,w,c
   443   00070C  2004               	addwfc	(?___lmul+3)^0,w,c
   444   00070E  6E25               	movwf	(main@data+3)^0,c
   445                           
   446                           ;main.c: 38:             sum=(read_internal_eeprom(0x03));
   447   000710  0E03               	movlw	3
   448   000712  EC5F  F006         	call	_read_internal_eeprom
   449   000716  6E0F               	movwf	??_main^0,c
   450   000718  500F               	movf	??_main^0,w,c
   451   00071A  6E1B               	movwf	main@sum^0,c
   452   00071C  6A1C               	clrf	(main@sum+1)^0,c
   453   00071E  6A1D               	clrf	(main@sum+2)^0,c
   454   000720  6A1E               	clrf	(main@sum+3)^0,c
   455                           
   456                           ;main.c: 39:             data=(data*10)+sum;
   457   000722  C022  F001         	movff	main@data,___lmul@multiplier
   458   000726  C023  F002         	movff	main@data+1,___lmul@multiplier+1
   459   00072A  C024  F003         	movff	main@data+2,___lmul@multiplier+2
   460   00072E  C025  F004         	movff	main@data+3,___lmul@multiplier+3
   461   000732  0E0A               	movlw	10
   462   000734  6E05               	movwf	___lmul@multiplicand^0,c
   463   000736  0E00               	movlw	0
   464   000738  6E06               	movwf	(___lmul@multiplicand+1)^0,c
   465   00073A  0E00               	movlw	0
   466   00073C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
   467   00073E  0E00               	movlw	0
   468   000740  6E08               	movwf	(___lmul@multiplicand+3)^0,c
   469   000742  ECEA  F005         	call	___lmul	;wreg free
   470   000746  501B               	movf	main@sum^0,w,c
   471   000748  2401               	addwf	?___lmul^0,w,c
   472   00074A  6E22               	movwf	main@data^0,c
   473   00074C  501C               	movf	(main@sum+1)^0,w,c
   474   00074E  2002               	addwfc	(?___lmul+1)^0,w,c
   475   000750  6E23               	movwf	(main@data+1)^0,c
   476   000752  501D               	movf	(main@sum+2)^0,w,c
   477   000754  2003               	addwfc	(?___lmul+2)^0,w,c
   478   000756  6E24               	movwf	(main@data+2)^0,c
   479   000758  501E               	movf	(main@sum+3)^0,w,c
   480   00075A  2004               	addwfc	(?___lmul+3)^0,w,c
   481   00075C  6E25               	movwf	(main@data+3)^0,c
   482   00075E                     
   483                           ;main.c: 40:             count = data;
   484   00075E  C022  F020         	movff	main@data,main@count
   485   000762  C023  F021         	movff	main@data+1,main@count+1
   486   000766                     l1156:
   487                           
   488                           ;main.c: 44:     {;main.c: 46:         if(RC0==0)
   489   000766  B082               	btfsc	3970,0,c	;volatile
   490   000768  EFB8  F003         	goto	u421
   491   00076C  EFBA  F003         	goto	u420
   492   000770                     u421:
   493   000770  EFDD  F003         	goto	l1162
   494   000774                     u420:
   495   000774                     
   496                           ;main.c: 47:         {;main.c: 48:             if(delay++>100)
   497   000774  C017  F00F         	movff	main@delay,??_main
   498   000778  C018  F010         	movff	main@delay+1,??_main+1
   499   00077C  C019  F011         	movff	main@delay+2,??_main+2
   500   000780  C01A  F012         	movff	main@delay+3,??_main+3
   501   000784  2A17               	incf	main@delay^0,f,c
   502   000786  0E00               	movlw	0
   503   000788  2218               	addwfc	(main@delay+1)^0,f,c
   504   00078A  2219               	addwfc	(main@delay+2)^0,f,c
   505   00078C  221A               	addwfc	(main@delay+3)^0,f,c
   506   00078E  BE12               	btfsc	(??_main+3)^0,7,c
   507   000790  EFD5  F003         	goto	u431
   508   000794  5012               	movf	(??_main+3)^0,w,c
   509   000796  1011               	iorwf	(??_main+2)^0,w,c
   510   000798  1010               	iorwf	(??_main+1)^0,w,c
   511   00079A  E109               	bnz	u430
   512   00079C  0E65               	movlw	101
   513   00079E  5C0F               	subwf	??_main^0,w,c
   514   0007A0  A0D8               	btfss	status,0,c
   515   0007A2  EFD5  F003         	goto	u431
   516   0007A6  EFD7  F003         	goto	u430
   517   0007AA                     u431:
   518   0007AA  EF06  F004         	goto	l1172
   519   0007AE                     u430:
   520   0007AE                     
   521                           ;main.c: 49:             {;main.c: 50:                 count=0;
   522   0007AE  0E00               	movlw	0
   523   0007B0  6E21               	movwf	(main@count+1)^0,c
   524   0007B2  0E00               	movlw	0
   525   0007B4  6E20               	movwf	main@count^0,c
   526   0007B6  EF06  F004         	goto	l1172
   527   0007BA                     l1162:
   528   0007BA  BE1A               	btfsc	(main@delay+3)^0,7,c
   529   0007BC  EFED  F003         	goto	u440
   530   0007C0  501A               	movf	(main@delay+3)^0,w,c
   531   0007C2  1019               	iorwf	(main@delay+2)^0,w,c
   532   0007C4  1018               	iorwf	(main@delay+1)^0,w,c
   533   0007C6  E107               	bnz	u441
   534   0007C8  0E64               	movlw	100
   535   0007CA  5C17               	subwf	main@delay^0,w,c
   536   0007CC  B0D8               	btfsc	status,0,c
   537   0007CE  EFEB  F003         	goto	u441
   538   0007D2  EFED  F003         	goto	u440
   539   0007D6                     u441:
   540   0007D6  EFFE  F003         	goto	l1168
   541   0007DA                     u440:
   542   0007DA  BE1A               	btfsc	(main@delay+3)^0,7,c
   543   0007DC  EFFA  F003         	goto	u451
   544   0007E0  501A               	movf	(main@delay+3)^0,w,c
   545   0007E2  1019               	iorwf	(main@delay+2)^0,w,c
   546   0007E4  1018               	iorwf	(main@delay+1)^0,w,c
   547   0007E6  E108               	bnz	u450
   548   0007E8  0417               	decf	main@delay^0,w,c
   549   0007EA  A0D8               	btfss	status,0,c
   550   0007EC  EFFA  F003         	goto	u451
   551   0007F0  EFFC  F003         	goto	u450
   552   0007F4                     u451:
   553   0007F4  EFFE  F003         	goto	l1168
   554   0007F8                     u450:
   555   0007F8                     
   556                           ;main.c: 55:         {;main.c: 56:             count++;
   557   0007F8  4A20               	infsnz	main@count^0,f,c
   558   0007FA  2A21               	incf	(main@count+1)^0,f,c
   559   0007FC                     l1168:
   560                           
   561                           ;main.c: 57:             delay=0;
   562   0007FC  0E00               	movlw	0
   563   0007FE  6E17               	movwf	main@delay^0,c
   564   000800  0E00               	movlw	0
   565   000802  6E18               	movwf	(main@delay+1)^0,c
   566   000804  0E00               	movlw	0
   567   000806  6E19               	movwf	(main@delay+2)^0,c
   568   000808  0E00               	movlw	0
   569   00080A  6E1A               	movwf	(main@delay+3)^0,c
   570   00080C                     l1172:
   571                           
   572                           ;main.c: 63:         if(RC1==0)
   573   00080C  B282               	btfsc	3970,1,c	;volatile
   574   00080E  EF0B  F004         	goto	u461
   575   000812  EF0D  F004         	goto	u460
   576   000816                     u461:
   577   000816  EF8D  F004         	goto	l1194
   578   00081A                     u460:
   579   00081A                     
   580                           ;main.c: 64:         {;main.c: 65:             int count1=count;
   581   00081A  C020  F026         	movff	main@count,main@count1
   582   00081E  C021  F027         	movff	main@count+1,main@count1+1
   583   000822                     
   584                           ;main.c: 66:             unsigned char a=count1%10;
   585   000822  C026  F009         	movff	main@count1,___awmod@dividend
   586   000826  C027  F00A         	movff	main@count1+1,___awmod@dividend+1
   587   00082A  0E00               	movlw	0
   588   00082C  6E0C               	movwf	(___awmod@divisor+1)^0,c
   589   00082E  0E0A               	movlw	10
   590   000830  6E0B               	movwf	___awmod@divisor^0,c
   591   000832  EC4F  F005         	call	___awmod	;wreg free
   592   000836  5009               	movf	?___awmod^0,w,c
   593   000838  6E1F               	movwf	main@a^0,c
   594   00083A                     
   595                           ;main.c: 67:             write_internal_eeprom(0x03,a);
   596   00083A  C01F  F001         	movff	main@a,write_internal_eeprom@data
   597   00083E  0E03               	movlw	3
   598   000840  EC1F  F006         	call	_write_internal_eeprom
   599   000844                     
   600                           ;main.c: 68:             count1=count1/10;
   601   000844  C026  F001         	movff	main@count1,___awdiv@dividend
   602   000848  C027  F002         	movff	main@count1+1,___awdiv@dividend+1
   603   00084C  0E00               	movlw	0
   604   00084E  6E04               	movwf	(___awdiv@divisor+1)^0,c
   605   000850  0E0A               	movlw	10
   606   000852  6E03               	movwf	___awdiv@divisor^0,c
   607   000854  ECED  F004         	call	___awdiv	;wreg free
   608   000858  C001  F026         	movff	?___awdiv,main@count1
   609   00085C  C002  F027         	movff	?___awdiv+1,main@count1+1
   610   000860                     
   611                           ;main.c: 69:              a =count1%10;
   612   000860  C026  F009         	movff	main@count1,___awmod@dividend
   613   000864  C027  F00A         	movff	main@count1+1,___awmod@dividend+1
   614   000868  0E00               	movlw	0
   615   00086A  6E0C               	movwf	(___awmod@divisor+1)^0,c
   616   00086C  0E0A               	movlw	10
   617   00086E  6E0B               	movwf	___awmod@divisor^0,c
   618   000870  EC4F  F005         	call	___awmod	;wreg free
   619   000874  5009               	movf	?___awmod^0,w,c
   620   000876  6E1F               	movwf	main@a^0,c
   621   000878                     
   622                           ;main.c: 70:             write_internal_eeprom(0x02,a);
   623   000878  C01F  F001         	movff	main@a,write_internal_eeprom@data
   624   00087C  0E02               	movlw	2
   625   00087E  EC1F  F006         	call	_write_internal_eeprom
   626                           
   627                           ;main.c: 71:             count1=count1/10;
   628   000882  C026  F001         	movff	main@count1,___awdiv@dividend
   629   000886  C027  F002         	movff	main@count1+1,___awdiv@dividend+1
   630   00088A  0E00               	movlw	0
   631   00088C  6E04               	movwf	(___awdiv@divisor+1)^0,c
   632   00088E  0E0A               	movlw	10
   633   000890  6E03               	movwf	___awdiv@divisor^0,c
   634   000892  ECED  F004         	call	___awdiv	;wreg free
   635   000896  C001  F026         	movff	?___awdiv,main@count1
   636   00089A  C002  F027         	movff	?___awdiv+1,main@count1+1
   637                           
   638                           ;main.c: 72:             a=count1%10;
   639   00089E  C026  F009         	movff	main@count1,___awmod@dividend
   640   0008A2  C027  F00A         	movff	main@count1+1,___awmod@dividend+1
   641   0008A6  0E00               	movlw	0
   642   0008A8  6E0C               	movwf	(___awmod@divisor+1)^0,c
   643   0008AA  0E0A               	movlw	10
   644   0008AC  6E0B               	movwf	___awmod@divisor^0,c
   645   0008AE  EC4F  F005         	call	___awmod	;wreg free
   646   0008B2  5009               	movf	?___awmod^0,w,c
   647   0008B4  6E1F               	movwf	main@a^0,c
   648   0008B6                     
   649                           ;main.c: 73:             write_internal_eeprom(0x01,a);
   650   0008B6  C01F  F001         	movff	main@a,write_internal_eeprom@data
   651   0008BA  0E01               	movlw	1
   652   0008BC  EC1F  F006         	call	_write_internal_eeprom
   653   0008C0                     
   654                           ;main.c: 74:             count1=count1/10;
   655   0008C0  C026  F001         	movff	main@count1,___awdiv@dividend
   656   0008C4  C027  F002         	movff	main@count1+1,___awdiv@dividend+1
   657   0008C8  0E00               	movlw	0
   658   0008CA  6E04               	movwf	(___awdiv@divisor+1)^0,c
   659   0008CC  0E0A               	movlw	10
   660   0008CE  6E03               	movwf	___awdiv@divisor^0,c
   661   0008D0  ECED  F004         	call	___awdiv	;wreg free
   662   0008D4  C001  F026         	movff	?___awdiv,main@count1
   663   0008D8  C002  F027         	movff	?___awdiv+1,main@count1+1
   664   0008DC                     
   665                           ;main.c: 75:              a =count1%10;
   666   0008DC  C026  F009         	movff	main@count1,___awmod@dividend
   667   0008E0  C027  F00A         	movff	main@count1+1,___awmod@dividend+1
   668   0008E4  0E00               	movlw	0
   669   0008E6  6E0C               	movwf	(___awmod@divisor+1)^0,c
   670   0008E8  0E0A               	movlw	10
   671   0008EA  6E0B               	movwf	___awmod@divisor^0,c
   672   0008EC  EC4F  F005         	call	___awmod	;wreg free
   673   0008F0  5009               	movf	?___awmod^0,w,c
   674   0008F2  6E1F               	movwf	main@a^0,c
   675   0008F4                     
   676                           ;main.c: 76:             write_internal_eeprom(0x00,a);
   677   0008F4  C01F  F001         	movff	main@a,write_internal_eeprom@data
   678   0008F8  0E00               	movlw	0
   679   0008FA  EC1F  F006         	call	_write_internal_eeprom
   680                           
   681                           ;main.c: 77:             count1=count1/10;
   682   0008FE  C026  F001         	movff	main@count1,___awdiv@dividend
   683   000902  C027  F002         	movff	main@count1+1,___awdiv@dividend+1
   684   000906  0E00               	movlw	0
   685   000908  6E04               	movwf	(___awdiv@divisor+1)^0,c
   686   00090A  0E0A               	movlw	10
   687   00090C  6E03               	movwf	___awdiv@divisor^0,c
   688   00090E  ECED  F004         	call	___awdiv	;wreg free
   689   000912  C001  F026         	movff	?___awdiv,main@count1
   690   000916  C002  F027         	movff	?___awdiv+1,main@count1+1
   691   00091A                     l1194:
   692                           
   693                           ;main.c: 79:         ssd[0] = digits[count/1000];
   694   00091A  C020  F001         	movff	main@count,___awdiv@dividend
   695   00091E  C021  F002         	movff	main@count+1,___awdiv@dividend+1
   696   000922  0E03               	movlw	3
   697   000924  6E04               	movwf	(___awdiv@divisor+1)^0,c
   698   000926  0EE8               	movlw	232
   699   000928  6E03               	movwf	___awdiv@divisor^0,c
   700   00092A  ECED  F004         	call	___awdiv	;wreg free
   701   00092E  5001               	movf	?___awdiv^0,w,c
   702   000930  0F28               	addlw	low _digits
   703   000932  6ED9               	movwf	fsr2l,c
   704   000934  6ADA               	clrf	fsr2h,c
   705   000936  50DF               	movf	indf2,w,c
   706   000938  6E13               	movwf	main@ssd^0,c
   707   00093A                     
   708                           ;main.c: 80:         ssd[1] = digits[count/100%10];
   709   00093A  0E00               	movlw	0
   710   00093C  6E04               	movwf	(___awdiv@divisor+1)^0,c
   711   00093E  0E64               	movlw	100
   712   000940  6E03               	movwf	___awdiv@divisor^0,c
   713   000942  C020  F001         	movff	main@count,___awdiv@dividend
   714   000946  C021  F002         	movff	main@count+1,___awdiv@dividend+1
   715   00094A  ECED  F004         	call	___awdiv	;wreg free
   716   00094E  C001  F009         	movff	?___awdiv,___awmod@dividend
   717   000952  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   718   000956  0E00               	movlw	0
   719   000958  6E0C               	movwf	(___awmod@divisor+1)^0,c
   720   00095A  0E0A               	movlw	10
   721   00095C  6E0B               	movwf	___awmod@divisor^0,c
   722   00095E  EC4F  F005         	call	___awmod	;wreg free
   723   000962  5009               	movf	?___awmod^0,w,c
   724   000964  0F28               	addlw	low _digits
   725   000966  6ED9               	movwf	fsr2l,c
   726   000968  6ADA               	clrf	fsr2h,c
   727   00096A  50DF               	movf	indf2,w,c
   728   00096C  6E14               	movwf	(main@ssd+1)^0,c
   729   00096E                     
   730                           ;main.c: 81:         ssd[2] = digits[count/10%10];
   731   00096E  0E00               	movlw	0
   732   000970  6E04               	movwf	(___awdiv@divisor+1)^0,c
   733   000972  0E0A               	movlw	10
   734   000974  6E03               	movwf	___awdiv@divisor^0,c
   735   000976  C020  F001         	movff	main@count,___awdiv@dividend
   736   00097A  C021  F002         	movff	main@count+1,___awdiv@dividend+1
   737   00097E  ECED  F004         	call	___awdiv	;wreg free
   738   000982  C001  F009         	movff	?___awdiv,___awmod@dividend
   739   000986  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   740   00098A  0E00               	movlw	0
   741   00098C  6E0C               	movwf	(___awmod@divisor+1)^0,c
   742   00098E  0E0A               	movlw	10
   743   000990  6E0B               	movwf	___awmod@divisor^0,c
   744   000992  EC4F  F005         	call	___awmod	;wreg free
   745   000996  5009               	movf	?___awmod^0,w,c
   746   000998  0F28               	addlw	low _digits
   747   00099A  6ED9               	movwf	fsr2l,c
   748   00099C  6ADA               	clrf	fsr2h,c
   749   00099E  50DF               	movf	indf2,w,c
   750   0009A0  6E15               	movwf	(main@ssd+2)^0,c
   751   0009A2                     
   752                           ;main.c: 82:         ssd[3] = digits[count%10];
   753   0009A2  C020  F009         	movff	main@count,___awmod@dividend
   754   0009A6  C021  F00A         	movff	main@count+1,___awmod@dividend+1
   755   0009AA  0E00               	movlw	0
   756   0009AC  6E0C               	movwf	(___awmod@divisor+1)^0,c
   757   0009AE  0E0A               	movlw	10
   758   0009B0  6E0B               	movwf	___awmod@divisor^0,c
   759   0009B2  EC4F  F005         	call	___awmod	;wreg free
   760   0009B6  5009               	movf	?___awmod^0,w,c
   761   0009B8  0F28               	addlw	low _digits
   762   0009BA  6ED9               	movwf	fsr2l,c
   763   0009BC  6ADA               	clrf	fsr2h,c
   764   0009BE  50DF               	movf	indf2,w,c
   765   0009C0  6E16               	movwf	(main@ssd+3)^0,c
   766   0009C2                     
   767                           ;main.c: 83:         display(ssd,7);
   768   0009C2  0E13               	movlw	low main@ssd
   769   0009C4  6E01               	movwf	display@data^0,c
   770   0009C6  0E00               	movlw	0
   771   0009C8  6E03               	movwf	(display@count+1)^0,c
   772   0009CA  0E07               	movlw	7
   773   0009CC  6E02               	movwf	display@count^0,c
   774   0009CE  ECA7  F005         	call	_display	;wreg free
   775   0009D2  EFB3  F003         	goto	l1156
   776   0009D6  EF00  F000         	goto	start
   777   0009DA                     __end_of_main:
   778                           	callstack 0
   779                           
   780 ;; *************** function _write_internal_eeprom *****************
   781 ;; Defined at:
   782 ;;		line 13 in file "write.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;  address         1    wreg     unsigned char 
   785 ;;  data            1    0[COMRAM] unsigned char 
   786 ;; Auto vars:     Size  Location     Type
   787 ;;  address         1    1[COMRAM] unsigned char 
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      unsigned char 
   790 ;; Registers used:
   791 ;;		wreg, status,2
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   797 ;;      Params:         1       0       0       0       0       0       0
   798 ;;      Locals:         1       0       0       0       0       0       0
   799 ;;      Temps:          0       0       0       0       0       0       0
   800 ;;      Totals:         2       0       0       0       0       0       0
   801 ;;Total ram usage:        2 bytes
   802 ;; Hardware stack levels used: 1
   803 ;; This function calls:
   804 ;;		Nothing
   805 ;; This function is called by:
   806 ;;		_main
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           	psect	text1
   811   000C3E                     __ptext1:
   812                           	callstack 0
   813   000C3E                     _write_internal_eeprom:
   814                           	callstack 30
   815                           
   816                           ;incstack = 0
   817                           ;write_internal_eeprom@address stored from wreg
   818   000C3E  6E02               	movwf	write_internal_eeprom@address^0,c
   819   000C40                     
   820                           ;write.c: 13: unsigned char write_internal_eeprom(unsigned char address,unsigned char da
      +                          ta);write.c: 14: {;write.c: 15:     EEADR=address;
   821   000C40  C002  FFA9         	movff	write_internal_eeprom@address,4009	;volatile
   822   000C44                     
   823                           ;write.c: 16:     EEDATA=data;
   824   000C44  C001  FFA8         	movff	write_internal_eeprom@data,4008	;volatile
   825   000C48                     
   826                           ;write.c: 17:     EEPGD=0;
   827   000C48  9EA6               	bcf	4006,7,c	;volsfr
   828   000C4A                     
   829                           ;write.c: 18:     CFGS=0;
   830   000C4A  9CA6               	bcf	4006,6,c	;volsfr
   831   000C4C                     
   832                           ;write.c: 19:     WREN=1;
   833   000C4C  84A6               	bsf	4006,2,c	;volsfr
   834   000C4E                     
   835                           ;write.c: 20:     EEIF=0;
   836   000C4E  98A1               	bcf	4001,4,c	;volatile
   837   000C50                     
   838                           ;write.c: 21:     GIE=0;
   839   000C50  9EF2               	bcf	4082,7,c	;volatile
   840   000C52                     
   841                           ;write.c: 22:     EECON2=0x55;
   842   000C52  0E55               	movlw	85
   843   000C54  6EA7               	movwf	167,c	;volsfr
   844   000C56                     
   845                           ;write.c: 23:     EECON2=0xAA;
   846   000C56  0EAA               	movlw	170
   847   000C58  6EA7               	movwf	167,c	;volsfr
   848   000C5A                     
   849                           ;write.c: 24:     WR=1;
   850   000C5A  82A6               	bsf	4006,1,c	;volsfr
   851   000C5C                     
   852                           ;write.c: 25:     GIE=1;
   853   000C5C  8EF2               	bsf	4082,7,c	;volatile
   854   000C5E                     l99:
   855   000C5E  A8A1               	btfss	4001,4,c	;volatile
   856   000C60  EF34  F006         	goto	u271
   857   000C64  EF36  F006         	goto	u270
   858   000C68                     u271:
   859   000C68  EF2F  F006         	goto	l99
   860   000C6C                     u270:
   861   000C6C  0012               	return		;funcret
   862   000C6E                     __end_of_write_internal_eeprom:
   863                           	callstack 0
   864                           
   865 ;; *************** function _read_internal_eeprom *****************
   866 ;; Defined at:
   867 ;;		line 11 in file "read.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;  address         1    wreg     unsigned char 
   870 ;; Auto vars:     Size  Location     Type
   871 ;;  address         1    0[COMRAM] unsigned char 
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      unsigned char 
   874 ;; Registers used:
   875 ;;		wreg, status,2
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   881 ;;      Params:         0       0       0       0       0       0       0
   882 ;;      Locals:         1       0       0       0       0       0       0
   883 ;;      Temps:          0       0       0       0       0       0       0
   884 ;;      Totals:         1       0       0       0       0       0       0
   885 ;;Total ram usage:        1 bytes
   886 ;; Hardware stack levels used: 1
   887 ;; This function calls:
   888 ;;		Nothing
   889 ;; This function is called by:
   890 ;;		_main
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           	psect	text2
   895   000CBE                     __ptext2:
   896                           	callstack 0
   897   000CBE                     _read_internal_eeprom:
   898                           	callstack 30
   899                           
   900                           ;incstack = 0
   901                           ;read_internal_eeprom@address stored from wreg
   902   000CBE  6E01               	movwf	read_internal_eeprom@address^0,c
   903   000CC0                     
   904                           ;read.c: 11: unsigned char read_internal_eeprom(unsigned char address);read.c: 12: {;rea
      +                          d.c: 13:     EEADR=address;
   905   000CC0  C001  FFA9         	movff	read_internal_eeprom@address,4009	;volatile
   906   000CC4                     
   907                           ;read.c: 14:     EEPGD=0;
   908   000CC4  9EA6               	bcf	4006,7,c	;volsfr
   909   000CC6                     
   910                           ;read.c: 15:     CFGS=0;
   911   000CC6  9CA6               	bcf	4006,6,c	;volsfr
   912   000CC8                     
   913                           ;read.c: 16:     WREN=0;
   914   000CC8  94A6               	bcf	4006,2,c	;volsfr
   915   000CCA                     
   916                           ;read.c: 17:     RD=1;
   917   000CCA  80A6               	bsf	4006,0,c	;volsfr
   918   000CCC                     
   919                           ;read.c: 18:     return EEDATA;
   920   000CCC  50A8               	movf	168,w,c	;volatile
   921   000CCE  0012               	return		;funcret
   922   000CD0                     __end_of_read_internal_eeprom:
   923                           	callstack 0
   924                           
   925 ;; *************** function _init_config *****************
   926 ;; Defined at:
   927 ;;		line 12 in file "main.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;		None
   930 ;; Auto vars:     Size  Location     Type
   931 ;;		None
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg, status,2, status,0, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   941 ;;      Params:         0       0       0       0       0       0       0
   942 ;;      Locals:         0       0       0       0       0       0       0
   943 ;;      Temps:          0       0       0       0       0       0       0
   944 ;;      Totals:         0       0       0       0       0       0       0
   945 ;;Total ram usage:        0 bytes
   946 ;; Hardware stack levels used: 1
   947 ;; Hardware stack levels required when called: 1
   948 ;; This function calls:
   949 ;;		_init_ssd
   950 ;; This function is called by:
   951 ;;		_main
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955                           	psect	text3
   956   000CAA                     __ptext3:
   957                           	callstack 0
   958   000CAA                     _init_config:
   959                           	callstack 29
   960   000CAA                     
   961                           ;main.c: 14:     TRISB=0x00;
   962   000CAA  0E00               	movlw	0
   963   000CAC  6E93               	movwf	147,c	;volatile
   964                           
   965                           ;main.c: 15:     PORTB=0x00;
   966   000CAE  0E00               	movlw	0
   967   000CB0  6E81               	movwf	129,c	;volatile
   968   000CB2                     
   969                           ;main.c: 16:     TRISC=TRISC|0x0F;
   970   000CB2  5094               	movf	148,w,c	;volatile
   971   000CB4  090F               	iorlw	15
   972   000CB6  6E94               	movwf	148,c	;volatile
   973   000CB8                     
   974                           ;main.c: 17:     init_ssd();
   975   000CB8  EC4A  F006         	call	_init_ssd	;wreg free
   976   000CBC  0012               	return		;funcret
   977   000CBE                     __end_of_init_config:
   978                           	callstack 0
   979                           
   980 ;; *************** function _init_ssd *****************
   981 ;; Defined at:
   982 ;;		line 11 in file "display.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;		None
   985 ;; Auto vars:     Size  Location     Type
   986 ;;		None
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg, status,2, status,0
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   996 ;;      Params:         0       0       0       0       0       0       0
   997 ;;      Locals:         0       0       0       0       0       0       0
   998 ;;      Temps:          0       0       0       0       0       0       0
   999 ;;      Totals:         0       0       0       0       0       0       0
  1000 ;;Total ram usage:        0 bytes
  1001 ;; Hardware stack levels used: 1
  1002 ;; This function calls:
  1003 ;;		Nothing
  1004 ;; This function is called by:
  1005 ;;		_init_config
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           	psect	text4
  1010   000C94                     __ptext4:
  1011                           	callstack 0
  1012   000C94                     _init_ssd:
  1013                           	callstack 29
  1014   000C94                     
  1015                           ;display.c: 13:     ADCON1 =0x0f;
  1016   000C94  0E0F               	movlw	15
  1017   000C96  6EC1               	movwf	193,c	;volatile
  1018                           
  1019                           ;display.c: 14:     TRISD=0x00;
  1020   000C98  0E00               	movlw	0
  1021   000C9A  6E95               	movwf	149,c	;volatile
  1022   000C9C                     
  1023                           ;display.c: 15:     TRISA=TRISA&0xF0;
  1024   000C9C  5092               	movf	146,w,c	;volatile
  1025   000C9E  0BF0               	andlw	240
  1026   000CA0  6E92               	movwf	146,c	;volatile
  1027   000CA2                     
  1028                           ;display.c: 16:     PORTA=PORTA&0xF0;
  1029   000CA2  5080               	movf	128,w,c	;volatile
  1030   000CA4  0BF0               	andlw	240
  1031   000CA6  6E80               	movwf	128,c	;volatile
  1032   000CA8  0012               	return		;funcret
  1033   000CAA                     __end_of_init_ssd:
  1034                           	callstack 0
  1035                           
  1036 ;; *************** function _display *****************
  1037 ;; Defined at:
  1038 ;;		line 19 in file "display.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  data            1    0[COMRAM] PTR unsigned char 
  1041 ;;		 -> main@ssd(4), 
  1042 ;;  count           2    1[COMRAM] int 
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;  wait            4    5[COMRAM] unsigned long 
  1045 ;;  i               2    9[COMRAM] int 
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  1    wreg      void 
  1048 ;; Registers used:
  1049 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1055 ;;      Params:         3       0       0       0       0       0       0
  1056 ;;      Locals:         6       0       0       0       0       0       0
  1057 ;;      Temps:          2       0       0       0       0       0       0
  1058 ;;      Totals:        11       0       0       0       0       0       0
  1059 ;;Total ram usage:       11 bytes
  1060 ;; Hardware stack levels used: 1
  1061 ;; This function calls:
  1062 ;;		Nothing
  1063 ;; This function is called by:
  1064 ;;		_main
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           	psect	text5
  1069   000B4E                     __ptext5:
  1070                           	callstack 0
  1071   000B4E                     _display:
  1072                           	callstack 30
  1073   000B4E                     
  1074                           ;display.c: 19: void display(unsigned char *data,int count);display.c: 20: {;display.c: 
      +                          21:     for (int i=0;i<4;i++)
  1075   000B4E  0E00               	movlw	0
  1076   000B50  6E0B               	movwf	(display@i+1)^0,c
  1077   000B52  0E00               	movlw	0
  1078   000B54  6E0A               	movwf	display@i^0,c
  1079   000B56                     l1010:
  1080                           
  1081                           ;display.c: 22:     {;display.c: 23:         PORTD=data[i];
  1082   000B56  5001               	movf	display@data^0,w,c
  1083   000B58  240A               	addwf	display@i^0,w,c
  1084   000B5A  6ED9               	movwf	fsr2l,c
  1085   000B5C  6ADA               	clrf	fsr2h,c
  1086   000B5E  50DF               	movf	indf2,w,c
  1087   000B60  6E83               	movwf	131,c	;volatile
  1088   000B62                     
  1089                           ;display.c: 24:         PORTA=(PORTA&0xf0)|(1<<i);
  1090   000B62  C00A  F004         	movff	display@i,??_display
  1091   000B66  0E01               	movlw	1
  1092   000B68  6E05               	movwf	(??_display+1)^0,c
  1093   000B6A  2A04               	incf	??_display^0,f,c
  1094   000B6C  EFBA  F005         	goto	u244
  1095   000B70                     u245:
  1096   000B70  90D8               	bcf	status,0,c
  1097   000B72  3605               	rlcf	(??_display+1)^0,f,c
  1098   000B74                     u244:
  1099   000B74  2E04               	decfsz	??_display^0,f,c
  1100   000B76  EFB8  F005         	goto	u245
  1101   000B7A  5080               	movf	128,w,c	;volatile
  1102   000B7C  0BF0               	andlw	240
  1103   000B7E  1005               	iorwf	(??_display+1)^0,w,c
  1104   000B80  6E80               	movwf	128,c	;volatile
  1105   000B82                     
  1106                           ;display.c: 25:         for (unsigned long int wait=1000;wait>0;wait--);
  1107   000B82  0EE8               	movlw	232
  1108   000B84  6E06               	movwf	display@wait^0,c
  1109   000B86  0E03               	movlw	3
  1110   000B88  6E07               	movwf	(display@wait+1)^0,c
  1111   000B8A  0E00               	movlw	0
  1112   000B8C  6E08               	movwf	(display@wait+2)^0,c
  1113   000B8E  0E00               	movlw	0
  1114   000B90  6E09               	movwf	(display@wait+3)^0,c
  1115   000B92                     l1020:
  1116   000B92  0606               	decf	display@wait^0,f,c
  1117   000B94  0E00               	movlw	0
  1118   000B96  5A07               	subwfb	(display@wait+1)^0,f,c
  1119   000B98  5A08               	subwfb	(display@wait+2)^0,f,c
  1120   000B9A  5A09               	subwfb	(display@wait+3)^0,f,c
  1121   000B9C  5006               	movf	display@wait^0,w,c
  1122   000B9E  1007               	iorwf	(display@wait+1)^0,w,c
  1123   000BA0  1008               	iorwf	(display@wait+2)^0,w,c
  1124   000BA2  1009               	iorwf	(display@wait+3)^0,w,c
  1125   000BA4  A4D8               	btfss	status,2,c
  1126   000BA6  EFD7  F005         	goto	u251
  1127   000BAA  EFD9  F005         	goto	u250
  1128   000BAE                     u251:
  1129   000BAE  EFC9  F005         	goto	l1020
  1130   000BB2                     u250:
  1131   000BB2                     
  1132                           ;display.c: 26:     }
  1133   000BB2  4A0A               	infsnz	display@i^0,f,c
  1134   000BB4  2A0B               	incf	(display@i+1)^0,f,c
  1135   000BB6  BE0B               	btfsc	(display@i+1)^0,7,c
  1136   000BB8  EFE7  F005         	goto	u261
  1137   000BBC  500B               	movf	(display@i+1)^0,w,c
  1138   000BBE  E109               	bnz	u260
  1139   000BC0  0E04               	movlw	4
  1140   000BC2  5C0A               	subwf	display@i^0,w,c
  1141   000BC4  A0D8               	btfss	status,0,c
  1142   000BC6  EFE7  F005         	goto	u261
  1143   000BCA  EFE9  F005         	goto	u260
  1144   000BCE                     u261:
  1145   000BCE  EFAB  F005         	goto	l1010
  1146   000BD2                     u260:
  1147   000BD2  0012               	return		;funcret
  1148   000BD4                     __end_of_display:
  1149                           	callstack 0
  1150                           
  1151 ;; *************** function ___lmul *****************
  1152 ;; Defined at:
  1153 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;  multiplier      4    0[COMRAM] unsigned long 
  1156 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;  product         4    8[COMRAM] unsigned long 
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  4    0[COMRAM] unsigned long 
  1161 ;; Registers used:
  1162 ;;		wreg, status,2, status,0
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1168 ;;      Params:         8       0       0       0       0       0       0
  1169 ;;      Locals:         4       0       0       0       0       0       0
  1170 ;;      Temps:          0       0       0       0       0       0       0
  1171 ;;      Totals:        12       0       0       0       0       0       0
  1172 ;;Total ram usage:       12 bytes
  1173 ;; Hardware stack levels used: 1
  1174 ;; This function calls:
  1175 ;;		Nothing
  1176 ;; This function is called by:
  1177 ;;		_main
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text6
  1182   000BD4                     __ptext6:
  1183                           	callstack 0
  1184   000BD4                     ___lmul:
  1185                           	callstack 30
  1186   000BD4  0E00               	movlw	0
  1187   000BD6  6E09               	movwf	___lmul@product^0,c
  1188   000BD8  0E00               	movlw	0
  1189   000BDA  6E0A               	movwf	(___lmul@product+1)^0,c
  1190   000BDC  0E00               	movlw	0
  1191   000BDE  6E0B               	movwf	(___lmul@product+2)^0,c
  1192   000BE0  0E00               	movlw	0
  1193   000BE2  6E0C               	movwf	(___lmul@product+3)^0,c
  1194   000BE4                     l1050:
  1195   000BE4  A001               	btfss	___lmul@multiplier^0,0,c
  1196   000BE6  EFF7  F005         	goto	u281
  1197   000BEA  EFF9  F005         	goto	u280
  1198   000BEE                     u281:
  1199   000BEE  EF01  F006         	goto	l1054
  1200   000BF2                     u280:
  1201   000BF2  5005               	movf	___lmul@multiplicand^0,w,c
  1202   000BF4  2609               	addwf	___lmul@product^0,f,c
  1203   000BF6  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  1204   000BF8  220A               	addwfc	(___lmul@product+1)^0,f,c
  1205   000BFA  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  1206   000BFC  220B               	addwfc	(___lmul@product+2)^0,f,c
  1207   000BFE  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  1208   000C00  220C               	addwfc	(___lmul@product+3)^0,f,c
  1209   000C02                     l1054:
  1210   000C02  90D8               	bcf	status,0,c
  1211   000C04  3605               	rlcf	___lmul@multiplicand^0,f,c
  1212   000C06  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1213   000C08  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1214   000C0A  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1215   000C0C  90D8               	bcf	status,0,c
  1216   000C0E  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  1217   000C10  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  1218   000C12  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  1219   000C14  3201               	rrcf	___lmul@multiplier^0,f,c
  1220   000C16  5001               	movf	___lmul@multiplier^0,w,c
  1221   000C18  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  1222   000C1A  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  1223   000C1C  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  1224   000C1E  A4D8               	btfss	status,2,c
  1225   000C20  EF14  F006         	goto	u291
  1226   000C24  EF16  F006         	goto	u290
  1227   000C28                     u291:
  1228   000C28  EFF2  F005         	goto	l1050
  1229   000C2C                     u290:
  1230   000C2C  C009  F001         	movff	___lmul@product,?___lmul
  1231   000C30  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1232   000C34  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1233   000C38  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1234   000C3C  0012               	return		;funcret
  1235   000C3E                     __end_of___lmul:
  1236                           	callstack 0
  1237                           
  1238 ;; *************** function ___awmod *****************
  1239 ;; Defined at:
  1240 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;  dividend        2    8[COMRAM] int 
  1243 ;;  divisor         2   10[COMRAM] int 
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  sign            1   13[COMRAM] unsigned char 
  1246 ;;  counter         1   12[COMRAM] unsigned char 
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  2    8[COMRAM] int 
  1249 ;; Registers used:
  1250 ;;		wreg, status,2, status,0
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1256 ;;      Params:         4       0       0       0       0       0       0
  1257 ;;      Locals:         2       0       0       0       0       0       0
  1258 ;;      Temps:          0       0       0       0       0       0       0
  1259 ;;      Totals:         6       0       0       0       0       0       0
  1260 ;;Total ram usage:        6 bytes
  1261 ;; Hardware stack levels used: 1
  1262 ;; This function calls:
  1263 ;;		Nothing
  1264 ;; This function is called by:
  1265 ;;		_main
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text7
  1270   000A9E                     __ptext7:
  1271                           	callstack 0
  1272   000A9E                     ___awmod:
  1273                           	callstack 30
  1274   000A9E  0E00               	movlw	0
  1275   000AA0  6E0E               	movwf	___awmod@sign^0,c
  1276   000AA2  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  1277   000AA4  EF58  F005         	goto	u360
  1278   000AA8  EF56  F005         	goto	u361
  1279   000AAC                     u361:
  1280   000AAC  EF5E  F005         	goto	l1110
  1281   000AB0                     u360:
  1282   000AB0  6C09               	negf	___awmod@dividend^0,c
  1283   000AB2  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  1284   000AB4  B0D8               	btfsc	status,0,c
  1285   000AB6  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  1286   000AB8  0E01               	movlw	1
  1287   000ABA  6E0E               	movwf	___awmod@sign^0,c
  1288   000ABC                     l1110:
  1289   000ABC  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  1290   000ABE  EF65  F005         	goto	u370
  1291   000AC2  EF63  F005         	goto	u371
  1292   000AC6                     u371:
  1293   000AC6  EF69  F005         	goto	l1114
  1294   000ACA                     u370:
  1295   000ACA  6C0B               	negf	___awmod@divisor^0,c
  1296   000ACC  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  1297   000ACE  B0D8               	btfsc	status,0,c
  1298   000AD0  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  1299   000AD2                     l1114:
  1300   000AD2  500B               	movf	___awmod@divisor^0,w,c
  1301   000AD4  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  1302   000AD6  B4D8               	btfsc	status,2,c
  1303   000AD8  EF70  F005         	goto	u381
  1304   000ADC  EF72  F005         	goto	u380
  1305   000AE0                     u381:
  1306   000AE0  EF96  F005         	goto	l1130
  1307   000AE4                     u380:
  1308   000AE4  0E01               	movlw	1
  1309   000AE6  6E0D               	movwf	___awmod@counter^0,c
  1310   000AE8  EF7A  F005         	goto	l1120
  1311   000AEC                     l1118:
  1312   000AEC  90D8               	bcf	status,0,c
  1313   000AEE  360B               	rlcf	___awmod@divisor^0,f,c
  1314   000AF0  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  1315   000AF2  2A0D               	incf	___awmod@counter^0,f,c
  1316   000AF4                     l1120:
  1317   000AF4  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  1318   000AF6  EF7F  F005         	goto	u391
  1319   000AFA  EF81  F005         	goto	u390
  1320   000AFE                     u391:
  1321   000AFE  EF76  F005         	goto	l1118
  1322   000B02                     u390:
  1323   000B02                     l1122:
  1324   000B02  500B               	movf	___awmod@divisor^0,w,c
  1325   000B04  5C09               	subwf	___awmod@dividend^0,w,c
  1326   000B06  500C               	movf	(___awmod@divisor+1)^0,w,c
  1327   000B08  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  1328   000B0A  A0D8               	btfss	status,0,c
  1329   000B0C  EF8A  F005         	goto	u401
  1330   000B10  EF8C  F005         	goto	u400
  1331   000B14                     u401:
  1332   000B14  EF90  F005         	goto	l1126
  1333   000B18                     u400:
  1334   000B18  500B               	movf	___awmod@divisor^0,w,c
  1335   000B1A  5E09               	subwf	___awmod@dividend^0,f,c
  1336   000B1C  500C               	movf	(___awmod@divisor+1)^0,w,c
  1337   000B1E  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  1338   000B20                     l1126:
  1339   000B20  90D8               	bcf	status,0,c
  1340   000B22  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  1341   000B24  320B               	rrcf	___awmod@divisor^0,f,c
  1342   000B26  2E0D               	decfsz	___awmod@counter^0,f,c
  1343   000B28  EF81  F005         	goto	l1122
  1344   000B2C                     l1130:
  1345   000B2C  500E               	movf	___awmod@sign^0,w,c
  1346   000B2E  B4D8               	btfsc	status,2,c
  1347   000B30  EF9C  F005         	goto	u411
  1348   000B34  EF9E  F005         	goto	u410
  1349   000B38                     u411:
  1350   000B38  EFA2  F005         	goto	l1134
  1351   000B3C                     u410:
  1352   000B3C  6C09               	negf	___awmod@dividend^0,c
  1353   000B3E  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  1354   000B40  B0D8               	btfsc	status,0,c
  1355   000B42  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  1356   000B44                     l1134:
  1357   000B44  C009  F009         	movff	___awmod@dividend,?___awmod
  1358   000B48  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  1359   000B4C  0012               	return		;funcret
  1360   000B4E                     __end_of___awmod:
  1361                           	callstack 0
  1362                           
  1363 ;; *************** function ___awdiv *****************
  1364 ;; Defined at:
  1365 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;  dividend        2    0[COMRAM] int 
  1368 ;;  divisor         2    2[COMRAM] int 
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;  quotient        2    6[COMRAM] int 
  1371 ;;  sign            1    5[COMRAM] unsigned char 
  1372 ;;  counter         1    4[COMRAM] unsigned char 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  2    0[COMRAM] int 
  1375 ;; Registers used:
  1376 ;;		wreg, status,2, status,0
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1382 ;;      Params:         4       0       0       0       0       0       0
  1383 ;;      Locals:         4       0       0       0       0       0       0
  1384 ;;      Temps:          0       0       0       0       0       0       0
  1385 ;;      Totals:         8       0       0       0       0       0       0
  1386 ;;Total ram usage:        8 bytes
  1387 ;; Hardware stack levels used: 1
  1388 ;; This function calls:
  1389 ;;		Nothing
  1390 ;; This function is called by:
  1391 ;;		_main
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           	psect	text8
  1396   0009DA                     __ptext8:
  1397                           	callstack 0
  1398   0009DA                     ___awdiv:
  1399                           	callstack 30
  1400   0009DA  0E00               	movlw	0
  1401   0009DC  6E06               	movwf	___awdiv@sign^0,c
  1402   0009DE  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1403   0009E0  EFF6  F004         	goto	u300
  1404   0009E4  EFF4  F004         	goto	u301
  1405   0009E8                     u301:
  1406   0009E8  EFFC  F004         	goto	l1066
  1407   0009EC                     u300:
  1408   0009EC  6C03               	negf	___awdiv@divisor^0,c
  1409   0009EE  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1410   0009F0  B0D8               	btfsc	status,0,c
  1411   0009F2  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1412   0009F4  0E01               	movlw	1
  1413   0009F6  6E06               	movwf	___awdiv@sign^0,c
  1414   0009F8                     l1066:
  1415   0009F8  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1416   0009FA  EF03  F005         	goto	u310
  1417   0009FE  EF01  F005         	goto	u311
  1418   000A02                     u311:
  1419   000A02  EF09  F005         	goto	l1072
  1420   000A06                     u310:
  1421   000A06  6C01               	negf	___awdiv@dividend^0,c
  1422   000A08  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1423   000A0A  B0D8               	btfsc	status,0,c
  1424   000A0C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1425   000A0E  0E01               	movlw	1
  1426   000A10  1A06               	xorwf	___awdiv@sign^0,f,c
  1427   000A12                     l1072:
  1428   000A12  0E00               	movlw	0
  1429   000A14  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1430   000A16  0E00               	movlw	0
  1431   000A18  6E07               	movwf	___awdiv@quotient^0,c
  1432   000A1A  5003               	movf	___awdiv@divisor^0,w,c
  1433   000A1C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1434   000A1E  B4D8               	btfsc	status,2,c
  1435   000A20  EF14  F005         	goto	u321
  1436   000A24  EF16  F005         	goto	u320
  1437   000A28                     u321:
  1438   000A28  EF3E  F005         	goto	l1094
  1439   000A2C                     u320:
  1440   000A2C  0E01               	movlw	1
  1441   000A2E  6E05               	movwf	___awdiv@counter^0,c
  1442   000A30  EF1E  F005         	goto	l1080
  1443   000A34                     l1078:
  1444   000A34  90D8               	bcf	status,0,c
  1445   000A36  3603               	rlcf	___awdiv@divisor^0,f,c
  1446   000A38  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1447   000A3A  2A05               	incf	___awdiv@counter^0,f,c
  1448   000A3C                     l1080:
  1449   000A3C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1450   000A3E  EF23  F005         	goto	u331
  1451   000A42  EF25  F005         	goto	u330
  1452   000A46                     u331:
  1453   000A46  EF1A  F005         	goto	l1078
  1454   000A4A                     u330:
  1455   000A4A                     l1082:
  1456   000A4A  90D8               	bcf	status,0,c
  1457   000A4C  3607               	rlcf	___awdiv@quotient^0,f,c
  1458   000A4E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1459   000A50  5003               	movf	___awdiv@divisor^0,w,c
  1460   000A52  5C01               	subwf	___awdiv@dividend^0,w,c
  1461   000A54  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1462   000A56  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1463   000A58  A0D8               	btfss	status,0,c
  1464   000A5A  EF31  F005         	goto	u341
  1465   000A5E  EF33  F005         	goto	u340
  1466   000A62                     u341:
  1467   000A62  EF38  F005         	goto	l1090
  1468   000A66                     u340:
  1469   000A66  5003               	movf	___awdiv@divisor^0,w,c
  1470   000A68  5E01               	subwf	___awdiv@dividend^0,f,c
  1471   000A6A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1472   000A6C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1473   000A6E  8007               	bsf	___awdiv@quotient^0,0,c
  1474   000A70                     l1090:
  1475   000A70  90D8               	bcf	status,0,c
  1476   000A72  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1477   000A74  3203               	rrcf	___awdiv@divisor^0,f,c
  1478   000A76  2E05               	decfsz	___awdiv@counter^0,f,c
  1479   000A78  EF25  F005         	goto	l1082
  1480   000A7C                     l1094:
  1481   000A7C  5006               	movf	___awdiv@sign^0,w,c
  1482   000A7E  B4D8               	btfsc	status,2,c
  1483   000A80  EF44  F005         	goto	u351
  1484   000A84  EF46  F005         	goto	u350
  1485   000A88                     u351:
  1486   000A88  EF4A  F005         	goto	l1098
  1487   000A8C                     u350:
  1488   000A8C  6C07               	negf	___awdiv@quotient^0,c
  1489   000A8E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1490   000A90  B0D8               	btfsc	status,0,c
  1491   000A92  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1492   000A94                     l1098:
  1493   000A94  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1494   000A98  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1495   000A9C  0012               	return		;funcret
  1496   000A9E                     __end_of___awdiv:
  1497                           	callstack 0
  1498                           
  1499                           	psect	smallconst
  1500   000600                     __psmallconst:
  1501                           	callstack 0
  1502   000600  00                 	db	0
  1503   000601  00                 	db	0	; dummy byte at the end
  1504   000000                     
  1505                           	psect	rparam
  1506   000000                     
  1507                           	psect	idloc
  1508                           
  1509                           ;Config register IDLOC0 @ 0x200000
  1510                           ;	unspecified, using default values
  1511   200000                     	org	2097152
  1512   200000  FF                 	db	255
  1513                           
  1514                           ;Config register IDLOC1 @ 0x200001
  1515                           ;	unspecified, using default values
  1516   200001                     	org	2097153
  1517   200001  FF                 	db	255
  1518                           
  1519                           ;Config register IDLOC2 @ 0x200002
  1520                           ;	unspecified, using default values
  1521   200002                     	org	2097154
  1522   200002  FF                 	db	255
  1523                           
  1524                           ;Config register IDLOC3 @ 0x200003
  1525                           ;	unspecified, using default values
  1526   200003                     	org	2097155
  1527   200003  FF                 	db	255
  1528                           
  1529                           ;Config register IDLOC4 @ 0x200004
  1530                           ;	unspecified, using default values
  1531   200004                     	org	2097156
  1532   200004  FF                 	db	255
  1533                           
  1534                           ;Config register IDLOC5 @ 0x200005
  1535                           ;	unspecified, using default values
  1536   200005                     	org	2097157
  1537   200005  FF                 	db	255
  1538                           
  1539                           ;Config register IDLOC6 @ 0x200006
  1540                           ;	unspecified, using default values
  1541   200006                     	org	2097158
  1542   200006  FF                 	db	255
  1543                           
  1544                           ;Config register IDLOC7 @ 0x200007
  1545                           ;	unspecified, using default values
  1546   200007                     	org	2097159
  1547   200007  FF                 	db	255
  1548                           
  1549                           	psect	config
  1550                           
  1551                           ; Padding undefined space
  1552   300000                     	org	3145728
  1553   300000  FF                 	db	255
  1554                           
  1555                           ;Config register CONFIG1H @ 0x300001
  1556                           ;	unspecified, using default values
  1557                           ;	Oscillator Selection bits
  1558                           ;	OSC = 0x7, unprogrammed default
  1559                           ;	Fail-Safe Clock Monitor Enable bit
  1560                           ;	FCMEN = 0x0, unprogrammed default
  1561                           ;	Internal/External Oscillator Switchover bit
  1562                           ;	IESO = 0x0, unprogrammed default
  1563   300001                     	org	3145729
  1564   300001  07                 	db	7
  1565                           
  1566                           ;Config register CONFIG2L @ 0x300002
  1567                           ;	unspecified, using default values
  1568                           ;	Power-up Timer Enable bit
  1569                           ;	PWRT = 0x1, unprogrammed default
  1570                           ;	Brown-out Reset Enable bits
  1571                           ;	BOREN = 0x3, unprogrammed default
  1572                           ;	Brown-out Reset Voltage bits
  1573                           ;	BORV = 0x3, unprogrammed default
  1574   300002                     	org	3145730
  1575   300002  1F                 	db	31
  1576                           
  1577                           ;Config register CONFIG2H @ 0x300003
  1578                           ;	unspecified, using default values
  1579                           ;	Watchdog Timer Enable bit
  1580                           ;	WDT = 0x1, unprogrammed default
  1581                           ;	Watchdog Timer Postscale Select bits
  1582                           ;	WDTPS = 0xF, unprogrammed default
  1583   300003                     	org	3145731
  1584   300003  1F                 	db	31
  1585                           
  1586                           ; Padding undefined space
  1587   300004                     	org	3145732
  1588   300004  FF                 	db	255
  1589                           
  1590                           ;Config register CONFIG3H @ 0x300005
  1591                           ;	unspecified, using default values
  1592                           ;	PORTB A/D Enable bit
  1593                           ;	PBADEN = 0x1, unprogrammed default
  1594                           ;	Low-Power Timer 1 Oscillator Enable bit
  1595                           ;	LPT1OSC = 0x0, unprogrammed default
  1596                           ;	MCLR Pin Enable bit
  1597                           ;	MCLRE = 0x1, unprogrammed default
  1598   300005                     	org	3145733
  1599   300005  82                 	db	130
  1600                           
  1601                           ;Config register CONFIG4L @ 0x300006
  1602                           ;	unspecified, using default values
  1603                           ;	Stack Full/Underflow Reset Enable bit
  1604                           ;	STVREN = 0x1, unprogrammed default
  1605                           ;	Single-Supply ICSP Enable bit
  1606                           ;	LVP = 0x1, unprogrammed default
  1607                           ;	Boot Block Size Select bit
  1608                           ;	BBSIZ = 0x0, unprogrammed default
  1609                           ;	Extended Instruction Set Enable bit
  1610                           ;	XINST = 0x0, unprogrammed default
  1611                           ;	Background Debugger Enable bit
  1612                           ;	DEBUG = 0x1, unprogrammed default
  1613   300006                     	org	3145734
  1614   300006  85                 	db	133
  1615                           
  1616                           ; Padding undefined space
  1617   300007                     	org	3145735
  1618   300007  FF                 	db	255
  1619                           
  1620                           ;Config register CONFIG5L @ 0x300008
  1621                           ;	unspecified, using default values
  1622                           ;	Code Protection bit
  1623                           ;	CP0 = 0x1, unprogrammed default
  1624                           ;	Code Protection bit
  1625                           ;	CP1 = 0x1, unprogrammed default
  1626                           ;	Code Protection bit
  1627                           ;	CP2 = 0x1, unprogrammed default
  1628                           ;	Code Protection bit
  1629                           ;	CP3 = 0x1, unprogrammed default
  1630   300008                     	org	3145736
  1631   300008  0F                 	db	15
  1632                           
  1633                           ;Config register CONFIG5H @ 0x300009
  1634                           ;	unspecified, using default values
  1635                           ;	Boot Block Code Protection bit
  1636                           ;	CPB = 0x1, unprogrammed default
  1637                           ;	Data EEPROM Code Protection bit
  1638                           ;	CPD = 0x1, unprogrammed default
  1639   300009                     	org	3145737
  1640   300009  C0                 	db	192
  1641                           
  1642                           ;Config register CONFIG6L @ 0x30000A
  1643                           ;	unspecified, using default values
  1644                           ;	Write Protection bit
  1645                           ;	WRT0 = 0x1, unprogrammed default
  1646                           ;	Write Protection bit
  1647                           ;	WRT1 = 0x1, unprogrammed default
  1648                           ;	Write Protection bit
  1649                           ;	WRT2 = 0x1, unprogrammed default
  1650                           ;	Write Protection bit
  1651                           ;	WRT3 = 0x1, unprogrammed default
  1652   30000A                     	org	3145738
  1653   30000A  0F                 	db	15
  1654                           
  1655                           ;Config register CONFIG6H @ 0x30000B
  1656                           ;	unspecified, using default values
  1657                           ;	Configuration Register Write Protection bit
  1658                           ;	WRTC = 0x1, unprogrammed default
  1659                           ;	Boot Block Write Protection bit
  1660                           ;	WRTB = 0x1, unprogrammed default
  1661                           ;	Data EEPROM Write Protection bit
  1662                           ;	WRTD = 0x1, unprogrammed default
  1663   30000B                     	org	3145739
  1664   30000B  E0                 	db	224
  1665                           
  1666                           ;Config register CONFIG7L @ 0x30000C
  1667                           ;	unspecified, using default values
  1668                           ;	Table Read Protection bit
  1669                           ;	EBTR0 = 0x1, unprogrammed default
  1670                           ;	Table Read Protection bit
  1671                           ;	EBTR1 = 0x1, unprogrammed default
  1672                           ;	Table Read Protection bit
  1673                           ;	EBTR2 = 0x1, unprogrammed default
  1674                           ;	Table Read Protection bit
  1675                           ;	EBTR3 = 0x1, unprogrammed default
  1676   30000C                     	org	3145740
  1677   30000C  0F                 	db	15
  1678                           
  1679                           ;Config register CONFIG7H @ 0x30000D
  1680                           ;	unspecified, using default values
  1681                           ;	Boot Block Table Read Protection bit
  1682                           ;	EBTRB = 0x1, unprogrammed default
  1683   30000D                     	org	3145741
  1684   30000D  40                 	db	64
  1685                           tosu	equ	0xFFF
  1686                           tosh	equ	0xFFE
  1687                           tosl	equ	0xFFD
  1688                           stkptr	equ	0xFFC
  1689                           pclatu	equ	0xFFB
  1690                           pclath	equ	0xFFA
  1691                           pcl	equ	0xFF9
  1692                           tblptru	equ	0xFF8
  1693                           tblptrh	equ	0xFF7
  1694                           tblptrl	equ	0xFF6
  1695                           tablat	equ	0xFF5
  1696                           prodh	equ	0xFF4
  1697                           prodl	equ	0xFF3
  1698                           indf0	equ	0xFEF
  1699                           postinc0	equ	0xFEE
  1700                           postdec0	equ	0xFED
  1701                           preinc0	equ	0xFEC
  1702                           plusw0	equ	0xFEB
  1703                           fsr0h	equ	0xFEA
  1704                           fsr0l	equ	0xFE9
  1705                           wreg	equ	0xFE8
  1706                           indf1	equ	0xFE7
  1707                           postinc1	equ	0xFE6
  1708                           postdec1	equ	0xFE5
  1709                           preinc1	equ	0xFE4
  1710                           plusw1	equ	0xFE3
  1711                           fsr1h	equ	0xFE2
  1712                           fsr1l	equ	0xFE1
  1713                           bsr	equ	0xFE0
  1714                           indf2	equ	0xFDF
  1715                           postinc2	equ	0xFDE
  1716                           postdec2	equ	0xFDD
  1717                           preinc2	equ	0xFDC
  1718                           plusw2	equ	0xFDB
  1719                           fsr2h	equ	0xFDA
  1720                           fsr2l	equ	0xFD9
  1721                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     39      49
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@data	PTR unsigned char  size(1) Largest target is 4
		 -> main@ssd(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _main->___awmod
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0    4986
                                             14 COMRAM    25    25      0
                            ___awdiv
                            ___awmod
                             ___lmul
                            _display
                        _init_config
               _read_internal_eeprom
              _write_internal_eeprom
 ---------------------------------------------------------------------------------
 (1) _write_internal_eeprom                                2     1      1     348
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _read_internal_eeprom                                 1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                           _init_ssd
 ---------------------------------------------------------------------------------
 (2) _init_ssd                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                             11     8      3     310
                                              0 COMRAM    11     8      3
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     826
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4    1360
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1364
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   ___lmul
   _display
   _init_config
     _init_ssd
   _read_internal_eeprom
   _write_internal_eeprom

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      24        0.0%
BITBIGSFRllll      280      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     27      31       1       51.6%
BITBIGSFRhl         30      0       0      17        0.0%
BITBIGSFRlhh        17      0       0      18        0.0%
BITBIGSFRlllhh       E      0       0      21        0.0%
BITBIGSFRhh          D      0       0      16        0.0%
BITBIGSFRlhlll       B      0       0      20        0.0%
BITBIGSFRlhllh       4      0       0      19        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      31      23        0.0%
DATA                 0      0      31       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Mar 20 12:11:17 2024

                           l22 0BD2                             l15 0CA8                             l45 0CBC  
                           l76 0CCE                             l99 0C5E                             _RD 7D30  
                           _WR 7D31                   ___awdiv@sign 0006                            l102 0C6C  
                          l116 0C2C                            l117 0C3C                            l336 0A9C  
                          l349 0B4C                            l810 0CB8                            l820 0CCA  
                          l812 0CC0                            l806 0CAA                            l822 0CCC  
                          l814 0CC4                            l808 0CB2                            l816 0CC6  
                          l818 0CC8                            l780 0C9C                            l782 0CA2  
                          l778 0C94                            _GIE 7F97                            _RC0 7C10  
                          _RC1 7C11                            u300 09EC                            u301 09E8  
                          u310 0A06                            u311 0A02                            u320 0A2C  
                          u400 0B18                            u321 0A28                            u401 0B14  
                          u330 0A4A                            u410 0B3C                            u250 0BB2  
                          u331 0A46                            u411 0B38                            u251 0BAE  
                          u340 0A66                            u260 0BD2                            u244 0B74  
                          u420 0774                            u341 0A62                            u261 0BCE  
                          u245 0B70                            u421 0770                            u350 0A8C  
                          u270 0C6C                            u430 07AE                            u351 0A88  
                          u271 0C68                            u431 07AA                            u360 0AB0  
                          u280 0BF2                            u440 07DA                            u361 0AAC  
                          u281 0BEE                            u441 07D6                            u370 0ACA  
                          u290 0C2C                            u450 07F8                            u371 0AC6  
                          u291 0C28                            u451 07F4                            u380 0AE4  
                          u460 081A                            u381 0AE0                            u461 0816  
                          u390 0B02                            u391 0AFE                   ___awmod@sign 000E  
                         l1010 0B56                           l1020 0B92                           l1012 0B62  
                         l1004 0B4E                           l1110 0ABC                           l1102 0A9E  
                         l1022 0BB2                           l1014 0B82                           l1030 0C48  
                         l1120 0AF4                           l1112 0ACA                           l1104 0AA2  
                         l1024 0BB6                           l1040 0C52                           l1032 0C4A  
                         l1200 09A2                           l1122 0B02                           l1130 0B2C  
                         l1114 0AD2                           l1106 0AB0                           l1050 0BE4  
                         l1042 0C56                           l1034 0C4C                           l1026 0C40  
                         l1202 09C2                           l1060 09DE                           l1132 0B3C  
                         l1124 0B18                           l1116 0AE4                           l1108 0AB8  
                         l1052 0BF2                           l1044 0C5A                           l1036 0C4E  
                         l1028 0C44                           l1140 0606                           l1070 0A0E  
                         l1062 09EC                           l1134 0B44                           l1126 0B20  
                         l1118 0AEC                           l1054 0C02                           l1046 0C5C  
                         l1038 0C50                           l1150 0616                           l1142 0616  
                         l1080 0A3C                           l1072 0A12                           l1064 09F4  
                         l1128 0B26                           l1056 0C0C                           l1048 0BD4  
                         l1160 07AE                           l1152 075E                           l1144 0616  
                         l1090 0A70                           l1082 0A4A                           l1074 0A1A  
                         l1066 09F8                           l1058 09DA                           l1162 07BA  
                         l1154 0766                           l1146 0616                           l1138 0602  
                         l1092 0A76                           l1084 0A50                           l1076 0A2C  
                         l1068 0A06                           l1180 0844                           l1164 07DA  
                         l1172 080C                           l1156 0766                           l1148 0616  
                         l1086 0A66                           l1078 0A34                           l1094 0A7C  
                         l1190 08DC                           l1182 0860                           l1174 081A  
                         l1166 07F8                           l1158 0774                           l1096 0A8C  
                         l1088 0A6E                           l1192 08F4                           l1184 0878  
                         l1176 0822                           l1168 07FC                           l1098 0A94  
                         l1186 08B6                           l1178 083A                           l1194 091A  
                         l1196 093A                           l1188 08C0                           l1198 096E  
                         _CFGS 7D36                           _EEIF 7D0C                           _WREN 7D32  
                  display@data 0001                    display@wait 0006                           _main 0602  
                         fsr2h 0FDA                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           start 0000                   ___param_bank 0000  
                        ?_main 0001                __end_of___awdiv 0A9E                          _EEADR 0FA9  
              __end_of___awmod 0B4E                          _EEPGD 7D37                ___awdiv@divisor 0003  
                 ?_init_config 0001                ___awdiv@counter 0005                          _PORTA 0F80  
                        _PORTB 0F81                          _PORTD 0F83                          _TRISA 0F92  
                        _TRISB 0F93                          _TRISC 0F94                          _TRISD 0F95  
          ___lmul@multiplicand 0005                   display@count 0002                __end_of_display 0BD4  
                        main@a 001F                          tablat 0FF5                          status 0FD8  
      ??_write_internal_eeprom 0002                __initialization 0C6E                   __end_of_main 09DA  
                       ??_main 000F                  __activetblptr 0000                         _ADCON1 0FC1  
                       _EEDATA 0FA8                         _EECON2 0FA7               ___awdiv@dividend 0001  
                       ___lmul 0BD4                      ??___awdiv 0005                      ??___awmod 000D  
                       _digits 0028               __end_of_init_ssd 0CAA               ___awdiv@quotient 0007  
              ___awmod@divisor 000B                         isa$std 0001                ___awmod@counter 000D  
                    ??_display 0004                   __pdataCOMRAM 0028                   __mediumconst 0000  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
                   __accesstop 0060        __end_of__initialization 0C8E                  ___rparam_used 0001  
               __pcstackCOMRAM 0001                        ?___lmul 0001                 ___lmul@product 0009  
  read_internal_eeprom@address 0001                      ?_init_ssd 0001  __end_of_write_internal_eeprom 0C6E  
                      __Hparam 0000                        __Lparam 0000                        ___awdiv 09DA  
                      ___awmod 0A9E                   __psmallconst 0600                        __pcinit 0C6E  
                      __ramtop 0600                        __ptext0 0602                        __ptext1 0C3E  
                      __ptext2 0CBE                        __ptext3 0CAA                        __ptext4 0C94  
                      __ptext5 0B4E                        __ptext6 0BD4                        __ptext7 0A9E  
                      __ptext8 09DA                        _display 0B4E               ___awmod@dividend 0009  
    write_internal_eeprom@data 0001                        main@ssd 0013                        main@sum 001B  
         end_of_initialization 0C8E                     ??_init_ssd 0001                        postdec1 0FE5  
                      postinc0 0FEE                     main@count1 0026   __end_of_read_internal_eeprom 0CD0  
               __end_of___lmul 0C3E                  __pidataCOMRAM 0CD0            start_initialization 0C6E  
                     ??___lmul 0009                  ??_init_config 0001                       ?___awdiv 0001  
                     ?___awmod 0009                       ?_display 0001                    __smallconst 0600  
          __end_of_init_config 0CBE           _read_internal_eeprom 0CBE          _write_internal_eeprom 0C3E  
                    main@delay 0017                      main@count 0020          ?_read_internal_eeprom 0001  
            ___lmul@multiplier 0001                      copy_data0 0C82                       __Hrparam 0000  
                     __Lrparam 0000                    _init_config 0CAA                       _init_ssd 0C94  
       ?_write_internal_eeprom 0001                       isa$xinst 0000                       main@data 0022  
                     display@i 000A         ??_read_internal_eeprom 0001   write_internal_eeprom@address 0002  
