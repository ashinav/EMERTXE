

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Apr 12 09:17:58 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4580 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     _ADRESL	set	4035
    57   000000                     _ADRESH	set	4036
    58   000000                     _VCFG1	set	32269
    59   000000                     _GODONE	set	32273
    60   000000                     _ADCON0	set	4034
    61   000000                     _PSA	set	32427
    62   000000                     _T0CS	set	32429
    63   000000                     _T08BIT	set	32430
    64   000000                     _TMR0IF	set	32658
    65   000000                     _TMR0IE	set	32661
    66   000000                     _PEIE	set	32662
    67   000000                     _GO	set	32273
    68   000000                     _ADON	set	32272
    69   000000                     _VCFG0	set	32268
    70   000000                     _ADCS2	set	32258
    71   000000                     _ADCS1	set	32257
    72   000000                     _ADCS0	set	32256
    73   000000                     _ACQT0	set	32259
    74   000000                     _ACQT1	set	32260
    75   000000                     _ACQT2	set	32261
    76   000000                     _RB0	set	31752
    77   000000                     _PORTB	set	3969
    78   000000                     _TRISB	set	3987
    79   000000                     _ADFM	set	32263
    80   000000                     _TMR0	set	4054
    81   000000                     _TMR0ON	set	32431
    82   000000                     _GIE	set	32663
    83                           
    84                           ; #config settings
    85                           
    86                           	psect	cinit
    87   000718                     __pcinit:
    88                           	callstack 0
    89   000718                     start_initialization:
    90                           	callstack 0
    91   000718                     __initialization:
    92                           	callstack 0
    93                           
    94                           ; Clear objects allocated to COMRAM (2 bytes)
    95   000718  6A0D               	clrf	(__pbssCOMRAM+1)& (0+255),c
    96   00071A  6A0C               	clrf	__pbssCOMRAM& (0+255),c
    97   00071C                     end_of_initialization:
    98                           	callstack 0
    99   00071C                     __end_of__initialization:
   100                           	callstack 0
   101   00071C  900E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   102   00071E  920E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   103   000720  0100               	movlb	0
   104   000722  EF01  F003         	goto	_main	;jump to C main() function
   105                           
   106                           	psect	bssCOMRAM
   107   00000C                     __pbssCOMRAM:
   108                           	callstack 0
   109   00000C                     _program_cycle:
   110                           	callstack 0
   111   00000C                     	ds	2
   112                           
   113                           	psect	cstackCOMRAM
   114   000001                     __pcstackCOMRAM:
   115                           	callstack 0
   116   000001                     ?_read_adc:
   117                           	callstack 0
   118                           
   119                           ; 2 bytes @ 0x0
   120   000001                     	ds	2
   121   000003                     ??_read_adc:
   122                           
   123                           ; 1 bytes @ 0x2
   124   000003                     	ds	2
   125   000005                     read_adc@reg_val:
   126                           	callstack 0
   127                           
   128                           ; 2 bytes @ 0x4
   129   000005                     	ds	2
   130   000007                     read_adc@channel:
   131                           	callstack 0
   132                           
   133                           ; 1 bytes @ 0x6
   134   000007                     	ds	1
   135   000008                     main@duty_cycle:
   136                           	callstack 0
   137                           
   138                           ; 2 bytes @ 0x7
   139   000008                     	ds	2
   140   00000A                     main@period:
   141                           	callstack 0
   142                           
   143                           ; 2 bytes @ 0x9
   144   00000A                     	ds	2
   145                           
   146 ;;
   147 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   148 ;;
   149 ;; *************** function _main *****************
   150 ;; Defined at:
   151 ;;		line 19 in file "main.c"
   152 ;; Parameters:    Size  Location     Type
   153 ;;		None
   154 ;; Auto vars:     Size  Location     Type
   155 ;;  period          2    9[COMRAM] unsigned int 
   156 ;;  duty_cycle      2    7[COMRAM] unsigned short 
   157 ;;  key             1    0        unsigned char 
   158 ;; Return value:  Size  Location     Type
   159 ;;                  1    wreg      void 
   160 ;; Registers used:
   161 ;;		wreg, status,2, status,0, cstack
   162 ;; Tracked objects:
   163 ;;		On entry : 0/0
   164 ;;		On exit  : 0/0
   165 ;;		Unchanged: 0/0
   166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   167 ;;      Params:         0       0       0       0       0       0       0
   168 ;;      Locals:         4       0       0       0       0       0       0
   169 ;;      Temps:          0       0       0       0       0       0       0
   170 ;;      Totals:         4       0       0       0       0       0       0
   171 ;;Total ram usage:        4 bytes
   172 ;; Hardware stack levels required when called: 3
   173 ;; This function calls:
   174 ;;		_init_config
   175 ;;		_read_adc
   176 ;; This function is called by:
   177 ;;		Startup code after reset
   178 ;; This function uses a non-reentrant model
   179 ;;
   180                           
   181                           	psect	text0
   182   000602                     __ptext0:
   183                           	callstack 0
   184   000602                     _main:
   185                           	callstack 28
   186   000602                     
   187                           ;main.c: 22:     init_config();
   188   000602  EC83  F003         	call	_init_config	;wreg free
   189   000606                     
   190                           ;main.c: 23:     unsigned short duty_cycle;;main.c: 24:     unsigned char key;;main.c: 2
      +                          5:     unsigned int period = 1023;
   191   000606  0E03               	movlw	3
   192   000608  6E0B               	movwf	(main@period+1)^0,c
   193   00060A  680A               	setf	main@period^0,c
   194   00060C                     l842:
   195                           
   196                           ;main.c: 27:        duty_cycle = read_adc(0x04);
   197   00060C  0E04               	movlw	4
   198   00060E  EC30  F003         	call	_read_adc
   199   000612  C001  F008         	movff	?_read_adc,main@duty_cycle
   200   000616  C002  F009         	movff	?_read_adc+1,main@duty_cycle+1
   201                           
   202                           ;main.c: 29:         {;main.c: 30:             if (duty_cycle >= program_cycle)
   203   00061A  500C               	movf	_program_cycle^0,w,c
   204   00061C  5C08               	subwf	main@duty_cycle^0,w,c
   205   00061E  500D               	movf	(_program_cycle+1)^0,w,c
   206   000620  5809               	subwfb	(main@duty_cycle+1)^0,w,c
   207   000622  A0D8               	btfss	status,0,c
   208   000624  EF16  F003         	goto	u61
   209   000628  EF18  F003         	goto	u60
   210   00062C                     u61:
   211   00062C  EF1B  F003         	goto	l23
   212   000630                     u60:
   213   000630                     
   214                           ;main.c: 31:             {;main.c: 32:                 RB0 = 1;
   215   000630  8081               	bsf	3969,0,c	;volatile
   216                           
   217                           ;main.c: 33:             }
   218   000632  EF1C  F003         	goto	l846
   219   000636                     l23:
   220                           
   221                           ;main.c: 35:                 RB0 = 0;
   222   000636  9081               	bcf	3969,0,c	;volatile
   223   000638                     l846:
   224                           
   225                           ;main.c: 36:             if (program_cycle == period)
   226   000638  500A               	movf	main@period^0,w,c
   227   00063A  180C               	xorwf	_program_cycle^0,w,c
   228   00063C  E107               	bnz	u71
   229   00063E  500B               	movf	(main@period+1)^0,w,c
   230   000640  180D               	xorwf	(_program_cycle+1)^0,w,c
   231   000642  A4D8               	btfss	status,2,c
   232   000644  EF26  F003         	goto	u71
   233   000648  EF28  F003         	goto	u70
   234   00064C                     u71:
   235   00064C  EF06  F003         	goto	l842
   236   000650                     u70:
   237   000650                     
   238                           ;main.c: 37:             {;main.c: 38:                 program_cycle = 0;
   239   000650  0E00               	movlw	0
   240   000652  6E0D               	movwf	(_program_cycle+1)^0,c
   241   000654  0E00               	movlw	0
   242   000656  6E0C               	movwf	_program_cycle^0,c
   243   000658  EF06  F003         	goto	l842
   244   00065C  EF07  F000         	goto	start
   245   000660                     __end_of_main:
   246                           	callstack 0
   247                           
   248 ;; *************** function _read_adc *****************
   249 ;; Defined at:
   250 ;;		line 51 in file "ADC.c"
   251 ;; Parameters:    Size  Location     Type
   252 ;;  channel         1    wreg     unsigned char 
   253 ;; Auto vars:     Size  Location     Type
   254 ;;  channel         1    6[COMRAM] unsigned char 
   255 ;;  reg_val         2    4[COMRAM] unsigned short 
   256 ;; Return value:  Size  Location     Type
   257 ;;                  2    0[COMRAM] unsigned short 
   258 ;; Registers used:
   259 ;;		wreg, status,2, status,0
   260 ;; Tracked objects:
   261 ;;		On entry : 0/0
   262 ;;		On exit  : 0/0
   263 ;;		Unchanged: 0/0
   264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   265 ;;      Params:         2       0       0       0       0       0       0
   266 ;;      Locals:         3       0       0       0       0       0       0
   267 ;;      Temps:          2       0       0       0       0       0       0
   268 ;;      Totals:         7       0       0       0       0       0       0
   269 ;;Total ram usage:        7 bytes
   270 ;; Hardware stack levels used: 1
   271 ;; Hardware stack levels required when called: 1
   272 ;; This function calls:
   273 ;;		Nothing
   274 ;; This function is called by:
   275 ;;		_main
   276 ;; This function uses a non-reentrant model
   277 ;;
   278                           
   279                           	psect	text1
   280   000660                     __ptext1:
   281                           	callstack 0
   282   000660                     _read_adc:
   283                           	callstack 29
   284                           
   285                           ;incstack = 0
   286                           ;read_adc@channel stored from wreg
   287   000660  6E07               	movwf	read_adc@channel^0,c
   288   000662                     
   289                           ;ADC.c: 51: unsigned short read_adc(unsigned char channel);ADC.c: 52: {;ADC.c: 53:  unsi
      +                          gned short reg_val;;ADC.c: 56:  ADCON0 = (ADCON0 & 0xC3) | (channel << 2);
   290   000662  C007  F003         	movff	read_adc@channel,??_read_adc
   291   000666  90D8               	bcf	status,0,c
   292   000668  3603               	rlcf	??_read_adc^0,f,c
   293   00066A  90D8               	bcf	status,0,c
   294   00066C  3603               	rlcf	??_read_adc^0,f,c
   295   00066E  50C2               	movf	194,w,c	;volatile
   296   000670  0BC3               	andlw	195
   297   000672  1003               	iorwf	??_read_adc^0,w,c
   298   000674  6EC2               	movwf	194,c	;volatile
   299   000676                     
   300                           ;ADC.c: 59:  GO = 1;
   301   000676  82C2               	bsf	4034,1,c	;volatile
   302   000678                     l66:
   303   000678  B2C2               	btfsc	4034,1,c	;volatile
   304   00067A  EF41  F003         	goto	u51
   305   00067E  EF43  F003         	goto	u50
   306   000682                     u51:
   307   000682  EF3C  F003         	goto	l66
   308   000686                     u50:
   309   000686                     
   310                           ;ADC.c: 61:  reg_val = (ADRESH << 8) | ADRESL;
   311   000686  50C3               	movf	195,w,c	;volatile
   312   000688  CFC4 F003          	movff	4036,??_read_adc	;volatile
   313   00068C  6A04               	clrf	(??_read_adc+1)^0,c
   314   00068E  C003  F004         	movff	??_read_adc,??_read_adc+1
   315   000692  6A03               	clrf	??_read_adc^0,c
   316   000694  1003               	iorwf	??_read_adc^0,w,c
   317   000696  6E05               	movwf	read_adc@reg_val^0,c
   318   000698  5004               	movf	(??_read_adc+1)^0,w,c
   319   00069A  6E06               	movwf	(read_adc@reg_val+1)^0,c
   320   00069C                     
   321                           ;ADC.c: 63:  return reg_val;
   322   00069C  C005  F001         	movff	read_adc@reg_val,?_read_adc
   323   0006A0  C006  F002         	movff	read_adc@reg_val+1,?_read_adc+1
   324   0006A4  0012               	return		;funcret
   325   0006A6                     __end_of_read_adc:
   326                           	callstack 0
   327                           
   328 ;; *************** function _init_config *****************
   329 ;; Defined at:
   330 ;;		line 11 in file "main.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;		None
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, status,2, cstack
   339 ;; Tracked objects:
   340 ;;		On entry : 0/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   344 ;;      Params:         0       0       0       0       0       0       0
   345 ;;      Locals:         0       0       0       0       0       0       0
   346 ;;      Temps:          0       0       0       0       0       0       0
   347 ;;      Totals:         0       0       0       0       0       0       0
   348 ;;Total ram usage:        0 bytes
   349 ;; Hardware stack levels used: 1
   350 ;; Hardware stack levels required when called: 2
   351 ;; This function calls:
   352 ;;		_init_adc
   353 ;;		_init_timer0
   354 ;; This function is called by:
   355 ;;		_main
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359                           	psect	text2
   360   000706                     __ptext2:
   361                           	callstack 0
   362   000706                     _init_config:
   363                           	callstack 28
   364   000706                     
   365                           ;main.c: 13:  PORTB = 0X00;
   366   000706  0E00               	movlw	0
   367   000708  6E81               	movwf	129,c	;volatile
   368                           
   369                           ;main.c: 14:     TRISB = 0X00;;
   370   00070A  0E00               	movlw	0
   371   00070C  6E93               	movwf	147,c	;volatile
   372   00070E                     
   373                           ;main.c: 15:     init_adc();
   374   00070E  EC66  F003         	call	_init_adc	;wreg free
   375   000712                     
   376                           ;main.c: 16:     init_timer0();
   377   000712  EC76  F003         	call	_init_timer0	;wreg free
   378   000716  0012               	return		;funcret
   379   000718                     __end_of_init_config:
   380                           	callstack 0
   381                           
   382 ;; *************** function _init_timer0 *****************
   383 ;; Defined at:
   384 ;;		line 11 in file "isr.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;		None
   387 ;; Auto vars:     Size  Location     Type
   388 ;;		None
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		wreg, status,2
   393 ;; Tracked objects:
   394 ;;		On entry : 0/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   398 ;;      Params:         0       0       0       0       0       0       0
   399 ;;      Locals:         0       0       0       0       0       0       0
   400 ;;      Temps:          0       0       0       0       0       0       0
   401 ;;      Totals:         0       0       0       0       0       0       0
   402 ;;Total ram usage:        0 bytes
   403 ;; Hardware stack levels used: 1
   404 ;; Hardware stack levels required when called: 1
   405 ;; This function calls:
   406 ;;		Nothing
   407 ;; This function is called by:
   408 ;;		_init_config
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           	psect	text3
   413   0006EC                     __ptext3:
   414                           	callstack 0
   415   0006EC                     _init_timer0:
   416                           	callstack 28
   417   0006EC                     
   418                           ;isr.c: 14:     GIE = 1;
   419   0006EC  8EF2               	bsf	4082,7,c	;volatile
   420                           
   421                           ;isr.c: 15:     PEIE = 1;
   422   0006EE  8CF2               	bsf	4082,6,c	;volatile
   423                           
   424                           ;isr.c: 17:     TMR0IE = 1;
   425   0006F0  8AF2               	bsf	4082,5,c	;volatile
   426                           
   427                           ;isr.c: 18:     TMR0IF = 0;
   428   0006F2  94F2               	bcf	4082,2,c	;volatile
   429   0006F4                     
   430                           ;isr.c: 19:     TMR0 = 6;
   431   0006F4  0E00               	movlw	0
   432   0006F6  6ED7               	movwf	215,c	;volatile
   433   0006F8  0E06               	movlw	6
   434   0006FA  6ED6               	movwf	214,c	;volatile
   435   0006FC                     
   436                           ;isr.c: 20:     TMR0ON = 1;
   437   0006FC  8ED5               	bsf	4053,7,c	;volatile
   438   0006FE                     
   439                           ;isr.c: 21:     T08BIT = 1;
   440   0006FE  8CD5               	bsf	4053,6,c	;volatile
   441   000700                     
   442                           ;isr.c: 22:     T0CS = 0;
   443   000700  9AD5               	bcf	4053,5,c	;volatile
   444   000702                     
   445                           ;isr.c: 23:     PSA = 1;
   446   000702  86D5               	bsf	4053,3,c	;volatile
   447   000704  0012               	return		;funcret
   448   000706                     __end_of_init_timer0:
   449                           	callstack 0
   450                           
   451 ;; *************** function _init_adc *****************
   452 ;; Defined at:
   453 ;;		line 12 in file "ADC.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;		None
   456 ;; Auto vars:     Size  Location     Type
   457 ;;		None
   458 ;; Return value:  Size  Location     Type
   459 ;;                  1    wreg      void 
   460 ;; Registers used:
   461 ;;		wreg, status,2
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   467 ;;      Params:         0       0       0       0       0       0       0
   468 ;;      Locals:         0       0       0       0       0       0       0
   469 ;;      Temps:          0       0       0       0       0       0       0
   470 ;;      Totals:         0       0       0       0       0       0       0
   471 ;;Total ram usage:        0 bytes
   472 ;; Hardware stack levels used: 1
   473 ;; Hardware stack levels required when called: 1
   474 ;; This function calls:
   475 ;;		Nothing
   476 ;; This function is called by:
   477 ;;		_init_config
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481                           	psect	text4
   482   0006CC                     __ptext4:
   483                           	callstack 0
   484   0006CC                     _init_adc:
   485                           	callstack 28
   486   0006CC                     
   487                           ;ADC.c: 15:  ADFM = 1;
   488   0006CC  8EC0               	bsf	4032,7,c	;volatile
   489                           
   490                           ;ADC.c: 21:  ACQT2 = 0;
   491   0006CE  9AC0               	bcf	4032,5,c	;volatile
   492                           
   493                           ;ADC.c: 22:  ACQT1 = 1;
   494   0006D0  88C0               	bsf	4032,4,c	;volatile
   495                           
   496                           ;ADC.c: 23:  ACQT0 = 0;
   497   0006D2  96C0               	bcf	4032,3,c	;volatile
   498                           
   499                           ;ADC.c: 29:  ADCS0 = 0;
   500   0006D4  90C0               	bcf	4032,0,c	;volatile
   501                           
   502                           ;ADC.c: 30:  ADCS1 = 1;
   503   0006D6  82C0               	bsf	4032,1,c	;volatile
   504                           
   505                           ;ADC.c: 31:  ADCS2 = 0;
   506   0006D8  94C0               	bcf	4032,2,c	;volatile
   507                           
   508                           ;ADC.c: 34:  GODONE = 0;
   509   0006DA  92C2               	bcf	4034,1,c	;volatile
   510                           
   511                           ;ADC.c: 39:  VCFG1 = 0;
   512   0006DC  9AC1               	bcf	4033,5,c	;volatile
   513                           
   514                           ;ADC.c: 41:  VCFG0 = 0;
   515   0006DE  98C1               	bcf	4033,4,c	;volatile
   516   0006E0                     
   517                           ;ADC.c: 44:  ADRESH = 0;
   518   0006E0  0E00               	movlw	0
   519   0006E2  6EC4               	movwf	196,c	;volatile
   520                           
   521                           ;ADC.c: 45:  ADRESL = 0;
   522   0006E4  0E00               	movlw	0
   523   0006E6  6EC3               	movwf	195,c	;volatile
   524   0006E8                     
   525                           ;ADC.c: 48:  ADON = 1;
   526   0006E8  80C2               	bsf	4034,0,c	;volatile
   527   0006EA  0012               	return		;funcret
   528   0006EC                     __end_of_init_adc:
   529                           	callstack 0
   530                           
   531 ;; *************** function _isr *****************
   532 ;; Defined at:
   533 ;;		line 25 in file "isr.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;		None
   536 ;; Auto vars:     Size  Location     Type
   537 ;;		None
   538 ;; Return value:  Size  Location     Type
   539 ;;                  1    wreg      void 
   540 ;; Registers used:
   541 ;;		wreg, status,2, status,0
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   547 ;;      Params:         0       0       0       0       0       0       0
   548 ;;      Locals:         0       0       0       0       0       0       0
   549 ;;      Temps:          0       0       0       0       0       0       0
   550 ;;      Totals:         0       0       0       0       0       0       0
   551 ;;Total ram usage:        0 bytes
   552 ;; Hardware stack levels used: 1
   553 ;; This function calls:
   554 ;;		Nothing
   555 ;; This function is called by:
   556 ;;		Interrupt level 2
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           	psect	intcode
   561   000008                     __pintcode:
   562                           	callstack 0
   563   000008                     _isr:
   564                           	callstack 28
   565                           
   566                           ;incstack = 0
   567   000008  820E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   568   00000A  ED53  F003         	call	int_func,f	;refresh shadow registers
   569                           
   570                           	psect	intcode_body
   571   0006A6                     __pintcode_body:
   572                           	callstack 28
   573   0006A6                     int_func:
   574                           	callstack 28
   575   0006A6  0006               	pop		; remove dummy address from shadow register refresh
   576   0006A8                     
   577                           ;isr.c: 28:     if (TMR0IF)
   578   0006A8  A4F2               	btfss	4082,2,c	;volatile
   579   0006AA  EF59  F003         	goto	i2u4_41
   580   0006AE  EF5B  F003         	goto	i2u4_40
   581   0006B2                     i2u4_41:
   582   0006B2  EF64  F003         	goto	i2l98
   583   0006B6                     i2u4_40:
   584   0006B6                     
   585                           ;isr.c: 29:     {;isr.c: 30:         TMR0 = TMR0 + 8;
   586   0006B6  0E08               	movlw	8
   587   0006B8  24D6               	addwf	214,w,c	;volatile
   588   0006BA  6ED6               	movwf	214,c	;volatile
   589   0006BC  0E00               	movlw	0
   590   0006BE  20D7               	addwfc	215,w,c	;volatile
   591   0006C0  6ED7               	movwf	215,c	;volatile
   592   0006C2                     
   593                           ;isr.c: 31:         ++program_cycle;
   594   0006C2  4A0C               	infsnz	_program_cycle^0,f,c
   595   0006C4  2A0D               	incf	(_program_cycle+1)^0,f,c
   596   0006C6                     
   597                           ;isr.c: 32:         TMR0IF = 0;
   598   0006C6  94F2               	bcf	4082,2,c	;volatile
   599   0006C8                     i2l98:
   600   0006C8  920E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   601   0006CA  0011               	retfie		f
   602   0006CC                     __end_of_isr:
   603                           	callstack 0
   604                           
   605                           	psect	smallconst
   606   000600                     __psmallconst:
   607                           	callstack 0
   608   000600  00                 	db	0
   609   000601  00                 	db	0	; dummy byte at the end
   610   000000                     
   611                           	psect	rparam
   612   000000                     
   613                           	psect	temp
   614   00000E                     btemp:
   615                           	callstack 0
   616   00000E                     	ds	1
   617   000000                     int$flags	set	btemp
   618   000000                     wtemp8	set	btemp+1
   619   000000                     ttemp5	set	btemp+1
   620   000000                     ttemp6	set	btemp+4
   621   000000                     ttemp7	set	btemp+8
   622                           
   623                           	psect	idloc
   624                           
   625                           ;Config register IDLOC0 @ 0x200000
   626                           ;	unspecified, using default values
   627   200000                     	org	2097152
   628   200000  FF                 	db	255
   629                           
   630                           ;Config register IDLOC1 @ 0x200001
   631                           ;	unspecified, using default values
   632   200001                     	org	2097153
   633   200001  FF                 	db	255
   634                           
   635                           ;Config register IDLOC2 @ 0x200002
   636                           ;	unspecified, using default values
   637   200002                     	org	2097154
   638   200002  FF                 	db	255
   639                           
   640                           ;Config register IDLOC3 @ 0x200003
   641                           ;	unspecified, using default values
   642   200003                     	org	2097155
   643   200003  FF                 	db	255
   644                           
   645                           ;Config register IDLOC4 @ 0x200004
   646                           ;	unspecified, using default values
   647   200004                     	org	2097156
   648   200004  FF                 	db	255
   649                           
   650                           ;Config register IDLOC5 @ 0x200005
   651                           ;	unspecified, using default values
   652   200005                     	org	2097157
   653   200005  FF                 	db	255
   654                           
   655                           ;Config register IDLOC6 @ 0x200006
   656                           ;	unspecified, using default values
   657   200006                     	org	2097158
   658   200006  FF                 	db	255
   659                           
   660                           ;Config register IDLOC7 @ 0x200007
   661                           ;	unspecified, using default values
   662   200007                     	org	2097159
   663   200007  FF                 	db	255
   664                           
   665                           	psect	config
   666                           
   667                           ; Padding undefined space
   668   300000                     	org	3145728
   669   300000  FF                 	db	255
   670                           
   671                           ;Config register CONFIG1H @ 0x300001
   672                           ;	unspecified, using default values
   673                           ;	Oscillator Selection bits
   674                           ;	OSC = 0x7, unprogrammed default
   675                           ;	Fail-Safe Clock Monitor Enable bit
   676                           ;	FCMEN = 0x0, unprogrammed default
   677                           ;	Internal/External Oscillator Switchover bit
   678                           ;	IESO = 0x0, unprogrammed default
   679   300001                     	org	3145729
   680   300001  07                 	db	7
   681                           
   682                           ;Config register CONFIG2L @ 0x300002
   683                           ;	unspecified, using default values
   684                           ;	Power-up Timer Enable bit
   685                           ;	PWRT = 0x1, unprogrammed default
   686                           ;	Brown-out Reset Enable bits
   687                           ;	BOREN = 0x3, unprogrammed default
   688                           ;	Brown-out Reset Voltage bits
   689                           ;	BORV = 0x3, unprogrammed default
   690   300002                     	org	3145730
   691   300002  1F                 	db	31
   692                           
   693                           ;Config register CONFIG2H @ 0x300003
   694                           ;	unspecified, using default values
   695                           ;	Watchdog Timer Enable bit
   696                           ;	WDT = 0x1, unprogrammed default
   697                           ;	Watchdog Timer Postscale Select bits
   698                           ;	WDTPS = 0xF, unprogrammed default
   699   300003                     	org	3145731
   700   300003  1F                 	db	31
   701                           
   702                           ; Padding undefined space
   703   300004                     	org	3145732
   704   300004  FF                 	db	255
   705                           
   706                           ;Config register CONFIG3H @ 0x300005
   707                           ;	unspecified, using default values
   708                           ;	PORTB A/D Enable bit
   709                           ;	PBADEN = 0x1, unprogrammed default
   710                           ;	Low-Power Timer 1 Oscillator Enable bit
   711                           ;	LPT1OSC = 0x0, unprogrammed default
   712                           ;	MCLR Pin Enable bit
   713                           ;	MCLRE = 0x1, unprogrammed default
   714   300005                     	org	3145733
   715   300005  82                 	db	130
   716                           
   717                           ;Config register CONFIG4L @ 0x300006
   718                           ;	unspecified, using default values
   719                           ;	Stack Full/Underflow Reset Enable bit
   720                           ;	STVREN = 0x1, unprogrammed default
   721                           ;	Single-Supply ICSP Enable bit
   722                           ;	LVP = 0x1, unprogrammed default
   723                           ;	Boot Block Size Select bit
   724                           ;	BBSIZ = 0x0, unprogrammed default
   725                           ;	Extended Instruction Set Enable bit
   726                           ;	XINST = 0x0, unprogrammed default
   727                           ;	Background Debugger Enable bit
   728                           ;	DEBUG = 0x1, unprogrammed default
   729   300006                     	org	3145734
   730   300006  85                 	db	133
   731                           
   732                           ; Padding undefined space
   733   300007                     	org	3145735
   734   300007  FF                 	db	255
   735                           
   736                           ;Config register CONFIG5L @ 0x300008
   737                           ;	unspecified, using default values
   738                           ;	Code Protection bit
   739                           ;	CP0 = 0x1, unprogrammed default
   740                           ;	Code Protection bit
   741                           ;	CP1 = 0x1, unprogrammed default
   742                           ;	Code Protection bit
   743                           ;	CP2 = 0x1, unprogrammed default
   744                           ;	Code Protection bit
   745                           ;	CP3 = 0x1, unprogrammed default
   746   300008                     	org	3145736
   747   300008  0F                 	db	15
   748                           
   749                           ;Config register CONFIG5H @ 0x300009
   750                           ;	unspecified, using default values
   751                           ;	Boot Block Code Protection bit
   752                           ;	CPB = 0x1, unprogrammed default
   753                           ;	Data EEPROM Code Protection bit
   754                           ;	CPD = 0x1, unprogrammed default
   755   300009                     	org	3145737
   756   300009  C0                 	db	192
   757                           
   758                           ;Config register CONFIG6L @ 0x30000A
   759                           ;	unspecified, using default values
   760                           ;	Write Protection bit
   761                           ;	WRT0 = 0x1, unprogrammed default
   762                           ;	Write Protection bit
   763                           ;	WRT1 = 0x1, unprogrammed default
   764                           ;	Write Protection bit
   765                           ;	WRT2 = 0x1, unprogrammed default
   766                           ;	Write Protection bit
   767                           ;	WRT3 = 0x1, unprogrammed default
   768   30000A                     	org	3145738
   769   30000A  0F                 	db	15
   770                           
   771                           ;Config register CONFIG6H @ 0x30000B
   772                           ;	unspecified, using default values
   773                           ;	Configuration Register Write Protection bit
   774                           ;	WRTC = 0x1, unprogrammed default
   775                           ;	Boot Block Write Protection bit
   776                           ;	WRTB = 0x1, unprogrammed default
   777                           ;	Data EEPROM Write Protection bit
   778                           ;	WRTD = 0x1, unprogrammed default
   779   30000B                     	org	3145739
   780   30000B  E0                 	db	224
   781                           
   782                           ;Config register CONFIG7L @ 0x30000C
   783                           ;	unspecified, using default values
   784                           ;	Table Read Protection bit
   785                           ;	EBTR0 = 0x1, unprogrammed default
   786                           ;	Table Read Protection bit
   787                           ;	EBTR1 = 0x1, unprogrammed default
   788                           ;	Table Read Protection bit
   789                           ;	EBTR2 = 0x1, unprogrammed default
   790                           ;	Table Read Protection bit
   791                           ;	EBTR3 = 0x1, unprogrammed default
   792   30000C                     	org	3145740
   793   30000C  0F                 	db	15
   794                           
   795                           ;Config register CONFIG7H @ 0x30000D
   796                           ;	unspecified, using default values
   797                           ;	Boot Block Table Read Protection bit
   798                           ;	EBTRB = 0x1, unprogrammed default
   799   30000D                     	org	3145741
   800   30000D  40                 	db	64
   801                           tosu	equ	0xFFF
   802                           tosh	equ	0xFFE
   803                           tosl	equ	0xFFD
   804                           stkptr	equ	0xFFC
   805                           pclatu	equ	0xFFB
   806                           pclath	equ	0xFFA
   807                           pcl	equ	0xFF9
   808                           tblptru	equ	0xFF8
   809                           tblptrh	equ	0xFF7
   810                           tblptrl	equ	0xFF6
   811                           tablat	equ	0xFF5
   812                           prodh	equ	0xFF4
   813                           prodl	equ	0xFF3
   814                           indf0	equ	0xFEF
   815                           postinc0	equ	0xFEE
   816                           postdec0	equ	0xFED
   817                           preinc0	equ	0xFEC
   818                           plusw0	equ	0xFEB
   819                           fsr0h	equ	0xFEA
   820                           fsr0l	equ	0xFE9
   821                           wreg	equ	0xFE8
   822                           indf1	equ	0xFE7
   823                           postinc1	equ	0xFE6
   824                           postdec1	equ	0xFE5
   825                           preinc1	equ	0xFE4
   826                           plusw1	equ	0xFE3
   827                           fsr1h	equ	0xFE2
   828                           fsr1l	equ	0xFE1
   829                           bsr	equ	0xFE0
   830                           indf2	equ	0xFDF
   831                           postinc2	equ	0xFDE
   832                           postdec2	equ	0xFDD
   833                           preinc2	equ	0xFDC
   834                           plusw2	equ	0xFDB
   835                           fsr2h	equ	0xFDA
   836                           fsr2l	equ	0xFD9
   837                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     11      13
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_read_adc

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      91
                                              7 COMRAM     4     4      0
                        _init_config
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             7     5      2      45
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                           _init_adc
                        _init_timer0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_config
     _init_adc
     _init_timer0
   _read_adc

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      23        0.0%
BITBIGSFRl         281      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      B       D       1       13.8%
BITBIGSFRhhl        2C      0       0      19        0.0%
BITBIGSFRhhhhhl     1A      0       0      17        0.0%
BITBIGSFRhl         11      0       0      20        0.0%
BITBIGSFRhhhhhl     10      0       0      18        0.0%
BITBIGSFRhhhhhh      D      0       0      16        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       D      22        0.0%
DATA                 0      0       D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Apr 12 09:17:58 2024

                     l23 0636                       l17 0716                       l63 06EA  
                     l66 0678                       l92 0704                       l69 06A4  
                     _GO 7E11                       u50 0686                       u51 0682  
                     u60 0630                       u61 062C                       u70 0650  
                     u71 064C                      l830 0676                      l832 0686  
                    l840 0606                      l834 069C                      l842 060C  
                    l780 06EC                      l828 0662                      l844 0630  
                    l774 06CC                      l790 0702                      l782 06F4  
                    l846 0638                      l838 0602                      l776 06E0  
                    l784 06FC                      l792 0706                      l848 0650  
                    l778 06E8                      l786 06FE                      l794 070E  
                    l788 0700                      l796 0712                      _GIE 7F97  
                    _RB0 7C08                      _PSA 7EAB                      _isr 0008  
                   _ADFM 7E07                     ?_isr 0001                     _ADON 7E10  
                   _T0CS 7EAD                     _PEIE 7F96                     i2l98 06C8  
                   _TMR0 0FD6                     _main 0602                     btemp 000E  
                   start 000E             ___param_bank 0000                    ??_isr 0001  
                  _ADCS0 7E00                    _ADCS1 7E01                    _ADCS2 7E02  
                  ?_main 0001                    _ACQT0 7E03                    _ACQT1 7E04  
                  _ACQT2 7E05             ?_init_config 0001                    i2l820 06A8  
                  i2l822 06B6                    i2l824 06C2                    i2l826 06C6  
                  _VCFG0 7E0C                    _VCFG1 7E0D                    _PORTB 0F81  
                  _TRISB 0F93             ?_init_timer0 0001                    ttemp5 000F  
                  ttemp6 0012                    ttemp7 0016                    status 0FD8  
                  wtemp8 000F          __initialization 0718             __end_of_main 0660  
                 ??_main 0008            __activetblptr 0000                   _ADCON0 0FC2  
                 _ADRESH 0FC4                   _ADRESL 0FC3                   _T08BIT 7EAE  
                 _GODONE 7E11                   _TMR0IE 7F95                   _TMR0IF 7F92  
                 _TMR0ON 7EAF                   i2u4_40 06B6                   i2u4_41 06B2  
       __end_of_init_adc 06EC         __end_of_read_adc 06A6                   isa$std 0001  
           __mediumconst 0000               __accesstop 0060  __end_of__initialization 071C  
          ___rparam_used 0001           __pcstackCOMRAM 0001                ?_init_adc 0001  
              ?_read_adc 0001           main@duty_cycle 0008                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0600                  __pcinit 0718  
                __ramtop 0600                  __ptext0 0602                  __ptext1 0660  
                __ptext2 0706                  __ptext3 06EC                  __ptext4 06CC  
         __pintcode_body 06A6     end_of_initialization 071C               ??_init_adc 0001  
             ??_read_adc 0003                  int_func 06A6          read_adc@channel 0007  
        read_adc@reg_val 0005               main@period 000A      start_initialization 0718  
            __end_of_isr 06CC            ??_init_config 0001            ??_init_timer0 0001  
            __pbssCOMRAM 000C                __pintcode 0008              __smallconst 0600  
    __end_of_init_config 0718      __end_of_init_timer0 0706                 __Hrparam 0000  
               __Lrparam 0000              _init_config 0706              _init_timer0 06EC  
               _init_adc 06CC                 _read_adc 0660                 isa$xinst 0000  
               int$flags 000E                 intlevel2 0000            _program_cycle 000C  
